Index: automator/src/main/java/com/stardust/view/accessibility/AccessibilityNodeInfoAllocator.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.stardust.view.accessibility\n\nimport android.os.Build\nimport androidx.annotation.RequiresApi\nimport androidx.core.view.accessibility.AccessibilityNodeInfoCompat\nimport android.util.Log\nimport android.view.accessibility.AccessibilityNodeInfo\n\nimport com.stardust.automator.BuildConfig\n\nimport java.util.Arrays\nimport java.util.HashMap\n\n/**\n * Created by Stardust on 2017/3/22.\n */\n\nopen class AccessibilityNodeInfoAllocator {\n\n    private val mAccessibilityNodeInfoList = HashMap<AccessibilityNodeInfo, String?>()\n\n    open fun getChild(parent: AccessibilityNodeInfo, i: Int): AccessibilityNodeInfo? {\n        return add(parent.getChild(i))\n    }\n\n    open fun getChild(parent: AccessibilityNodeInfoCompat, i: Int): AccessibilityNodeInfoCompat {\n        val compat = parent.getChild(i)\n        add(compat.unwrap() as AccessibilityNodeInfo)\n        return compat\n    }\n\n    open fun getParent(n: AccessibilityNodeInfo): AccessibilityNodeInfo? {\n        return add(n.parent)\n    }\n\n\n    open fun getParent(n: AccessibilityNodeInfoCompat): AccessibilityNodeInfoCompat {\n        val compat = n.parent\n        add(compat.unwrap() as AccessibilityNodeInfo)\n        return compat\n    }\n\n    open fun findAccessibilityNodeInfosByText(root: AccessibilityNodeInfo, text: String): List<AccessibilityNodeInfo> {\n        val list = root.findAccessibilityNodeInfosByText(text)\n        addAll(list)\n        return list\n    }\n\n\n    open fun findAccessibilityNodeInfosByText(root: AccessibilityNodeInfoCompat, text: String): List<AccessibilityNodeInfoCompat> {\n        val list = root.findAccessibilityNodeInfosByText(text)\n        addAll(list)\n        return list\n    }\n\n    @RequiresApi(Build.VERSION_CODES.JELLY_BEAN_MR2)\n    open fun findAccessibilityNodeInfosByViewId(root: AccessibilityNodeInfo, id: String): List<AccessibilityNodeInfo> {\n        val list = root.findAccessibilityNodeInfosByViewId(id)\n        addAll(list)\n        return list\n    }\n\n\n    open fun findAccessibilityNodeInfosByViewId(root: AccessibilityNodeInfoCompat, id: String): List<AccessibilityNodeInfoCompat> {\n        val list = root.findAccessibilityNodeInfosByViewId(id)\n        addAll(list)\n        return list\n    }\n\n    open fun recycle(nodeInfo: AccessibilityNodeInfo) {\n        nodeInfo.recycle()\n        mAccessibilityNodeInfoList.remove(nodeInfo)\n    }\n\n    open fun recycle(nodeInfo: AccessibilityNodeInfoCompat) {\n        recycle(nodeInfo.unwrap() as AccessibilityNodeInfo)\n    }\n\n    open fun recycleAll(): Int {\n        var notRecycledCount = 0\n        val size = mAccessibilityNodeInfoList.size\n        for ((key, value) in mAccessibilityNodeInfoList) {\n            try {\n                key.recycle()\n                notRecycledCount++\n                if (DEBUG)\n                    Log.w(TAG, value)\n            } catch (ignored: IllegalStateException) {\n            }\n\n        }\n        Log.v(TAG, \"Total: $size Not recycled: $notRecycledCount\")\n        return notRecycledCount\n    }\n\n    fun add(nodeInfo: AccessibilityNodeInfo?): AccessibilityNodeInfo? {\n        val stackTrace = if (DEBUG) Arrays.toString(Thread.currentThread().stackTrace) else null\n        if (nodeInfo != null)\n            mAccessibilityNodeInfoList[nodeInfo] = stackTrace\n        return nodeInfo\n    }\n\n    private fun addAll(nodeInfos: Collection<*>) {\n        val stackTrace = if (DEBUG) Arrays.toString(Thread.currentThread().stackTrace) else null\n        for (nodeInfo in nodeInfos) {\n            if (nodeInfo is AccessibilityNodeInfo) {\n                mAccessibilityNodeInfoList[nodeInfo] = stackTrace\n            } else if (nodeInfo is AccessibilityNodeInfoCompat) {\n                mAccessibilityNodeInfoList[nodeInfo.unwrap() as AccessibilityNodeInfo] = stackTrace\n            }\n        }\n    }\n\n    private class NoOpAllocator : AccessibilityNodeInfoAllocator() {\n\n        override fun getParent(n: AccessibilityNodeInfoCompat): AccessibilityNodeInfoCompat {\n            return n.parent\n        }\n\n        override fun getParent(n: AccessibilityNodeInfo): AccessibilityNodeInfo? {\n            return n.parent\n        }\n\n        override fun getChild(parent: AccessibilityNodeInfoCompat, i: Int): AccessibilityNodeInfoCompat {\n            return parent.getChild(i)\n        }\n\n        override fun getChild(parent: AccessibilityNodeInfo, i: Int): AccessibilityNodeInfo? {\n            return parent.getChild(i)\n        }\n\n        override fun findAccessibilityNodeInfosByViewId(root: AccessibilityNodeInfoCompat, id: String): List<AccessibilityNodeInfoCompat> {\n            return root.findAccessibilityNodeInfosByViewId(id)\n        }\n\n\n        @RequiresApi(Build.VERSION_CODES.JELLY_BEAN_MR2)\n        override fun findAccessibilityNodeInfosByViewId(root: AccessibilityNodeInfo, id: String): List<AccessibilityNodeInfo> {\n            return root.findAccessibilityNodeInfosByViewId(id)\n        }\n\n        override fun findAccessibilityNodeInfosByText(root: AccessibilityNodeInfo, text: String): List<AccessibilityNodeInfo> {\n            return root.findAccessibilityNodeInfosByText(text)\n        }\n\n        override fun findAccessibilityNodeInfosByText(root: AccessibilityNodeInfoCompat, text: String): List<AccessibilityNodeInfoCompat> {\n            return root.findAccessibilityNodeInfosByText(text)\n        }\n\n        override fun recycle(nodeInfo: AccessibilityNodeInfo) {\n            super.recycle(nodeInfo)\n        }\n\n        override fun recycle(nodeInfo: AccessibilityNodeInfoCompat) {\n            super.recycle(nodeInfo)\n        }\n\n        override fun recycleAll(): Int {\n            return -1\n        }\n\n\n    }\n\n    companion object {\n\n        val NONE: AccessibilityNodeInfoAllocator = NoOpAllocator()\n\n        private val TAG = \"AccessibilityAllocator\"\n        private val DEBUG = BuildConfig.DEBUG\n\n\n        val global = AccessibilityNodeInfoAllocator()\n\n        fun recycleList(root: AccessibilityNodeInfo, list: List<AccessibilityNodeInfo>) {\n            for (nodeInfo in list) {\n                if (nodeInfo !== root) {\n                    //// FIXME: 2017/5/1 Issue #180\n                    nodeInfo.recycle()\n                }\n            }\n        }\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/automator/src/main/java/com/stardust/view/accessibility/AccessibilityNodeInfoAllocator.kt b/automator/src/main/java/com/stardust/view/accessibility/AccessibilityNodeInfoAllocator.kt
--- a/automator/src/main/java/com/stardust/view/accessibility/AccessibilityNodeInfoAllocator.kt	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/automator/src/main/java/com/stardust/view/accessibility/AccessibilityNodeInfoAllocator.kt	(date 1671456600091)
@@ -84,7 +84,7 @@
                 key.recycle()
                 notRecycledCount++
                 if (DEBUG)
-                    Log.w(TAG, value)
+                    value?.let { Log.w(TAG, it) }
             } catch (ignored: IllegalStateException) {
             }
 
Index: autojs/src/main/java/com/stardust/autojs/runtime/api/Dialogs.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/autojs/src/main/java/com/stardust/autojs/runtime/api/Dialogs.java b/autojs/src/main/java/com/stardust/autojs/runtime/api/Dialogs.java
new file mode 100644
--- /dev/null	(date 1671457080393)
+++ b/autojs/src/main/java/com/stardust/autojs/runtime/api/Dialogs.java	(date 1671457080393)
@@ -0,0 +1,177 @@
+package com.stardust.autojs.runtime.api;
+
+import android.app.Activity;
+import android.content.Context;
+import android.text.TextUtils;
+import android.view.ContextThemeWrapper;
+
+import com.afollestad.materialdialogs.MaterialDialog;
+import com.stardust.autojs.R;
+import com.stardust.autojs.annotation.ScriptInterface;
+import com.stardust.autojs.annotation.ScriptVariable;
+import com.stardust.autojs.core.ui.dialog.BlockedMaterialDialog;
+import com.stardust.autojs.core.ui.dialog.JsDialogBuilder;
+import com.stardust.autojs.runtime.ScriptRuntime;
+import com.stardust.util.ArrayUtils;
+
+/**
+ * Created by Stardust on 2017/5/8.
+ */
+
+public class Dialogs {
+
+    private ContextThemeWrapper mThemeWrapper;
+    private final ScriptRuntime mRuntime;
+
+    @ScriptVariable
+    public final NonUiDialogs nonUiDialogs = new NonUiDialogs();
+
+    public Dialogs(ScriptRuntime runtime) {
+        mRuntime = runtime;
+    }
+
+    @ScriptInterface
+    public Object rawInput(String title, String prefill, Object callback) {
+        return ((BlockedMaterialDialog.Builder) dialogBuilder(callback)
+                .input(null, prefill, true)
+                .title(title))
+                .showAndGet();
+    }
+
+    @ScriptInterface
+    public Object alert(String title, String content, Object callback) {
+        MaterialDialog.Builder builder = dialogBuilder(callback)
+                .alert()
+                .title(title)
+                .positiveText(R.string.ok);
+        if (!TextUtils.isEmpty(content)) {
+            builder.content(content);
+        }
+        return ((BlockedMaterialDialog.Builder) builder).showAndGet();
+    }
+
+    @ScriptInterface
+    public Object confirm(String title, String content, Object callback) {
+        MaterialDialog.Builder builder = dialogBuilder(callback)
+                .confirm()
+                .title(title)
+                .positiveText(R.string.ok)
+                .negativeText(R.string.cancel);
+        if (!TextUtils.isEmpty(content)) {
+            builder.content(content);
+        }
+        return ((BlockedMaterialDialog.Builder) builder).showAndGet();
+}
+
+    private Context getContext() {
+        if (mThemeWrapper != null)
+            return mThemeWrapper;
+        mThemeWrapper = new ContextThemeWrapper(mRuntime.uiHandler.getContext().getApplicationContext(), R.style.Theme_AppCompat_Light);
+        return mThemeWrapper;
+    }
+
+    @ScriptInterface
+    public Object select(String title, String[] items, Object callback) {
+        return ((BlockedMaterialDialog.Builder) dialogBuilder(callback)
+                .itemsCallback()
+                .title(title)
+                .items((CharSequence[]) items))
+                .showAndGet();
+    }
+
+    private String[] getItems(Object[] args) {
+        int len = 0;
+        if (args.length > 1) {
+            if (args[args.length - 1] instanceof CharSequence) {
+                len = args.length;
+            } else {
+                len = args.length - 1;
+            }
+        }
+        String[] items = new String[len];
+        for (int i = 0; i < len; i++) {
+            items[i] = args[i] == null ? null : args[i].toString();
+        }
+        return items;
+    }
+
+    @ScriptInterface
+    public Object singleChoice(String title, int selectedIndex, String[] items, Object callback) {
+        return ((BlockedMaterialDialog.Builder) dialogBuilder(callback)
+                .itemsCallbackSingleChoice(selectedIndex)
+                .title(title)
+                .positiveText(R.string.ok)
+                .items((CharSequence[]) items))
+                .showAndGet();
+    }
+
+    @ScriptInterface
+    public Object multiChoice(String title, int[] indices, String[] items, Object callback) {
+        return ((BlockedMaterialDialog.Builder) dialogBuilder(callback)
+                .itemsCallbackMultiChoice(ArrayUtils.box(indices))
+                .title(title)
+                .positiveText(R.string.ok)
+                .items((CharSequence[]) items))
+                .showAndGet();
+    }
+
+    @ScriptInterface
+    public Object selectFile(String title, String prefill, Object callback) {
+        return ((BlockedMaterialDialog.Builder) dialogBuilder(callback)
+                .input(null, prefill, true)
+                .title(title))
+                .showAndGet();
+    }
+
+    private BlockedMaterialDialog.Builder dialogBuilder(Object callback) {
+        Context context = mRuntime.app.getCurrentActivity();
+        if (context == null || ((Activity) context).isFinishing()) {
+            context = getContext();
+        }
+        return (BlockedMaterialDialog.Builder) new BlockedMaterialDialog.Builder(context, mRuntime, callback)
+                .theme(Theme.LIGHT);
+    }
+
+    @ScriptInterface
+    public MaterialDialog.Builder newBuilder() {
+        Context context = mRuntime.app.getCurrentActivity();
+        if (context == null || ((Activity) context).isFinishing()) {
+            context = getContext();
+        }
+        return new JsDialogBuilder(context, mRuntime)
+                .theme(Theme.LIGHT);
+    }
+
+    public class NonUiDialogs {
+
+        public String rawInput(String title, String prefill, Object callback) {
+            return (String) Dialogs.this.rawInput(title, prefill, callback);
+        }
+
+        @ScriptInterface
+        public boolean confirm(String title, String content, Object callback) {
+            return (boolean) Dialogs.this.confirm(title, content, callback);
+        }
+
+        @ScriptInterface
+        public int select(String title, String[] items, Object callback) {
+            return (Integer) Dialogs.this.select(title, items, callback);
+        }
+
+        @ScriptInterface
+        public int singleChoice(String title, int selectedIndex, String[] items, Object callback) {
+            return (int) Dialogs.this.singleChoice(title, selectedIndex, items, callback);
+        }
+
+        @ScriptInterface
+        public int[] multiChoice(String title, int[] indices, String[] items, Object callback) {
+            return (int[]) Dialogs.this.multiChoice(title, indices, items, callback);
+        }
+
+        @ScriptInterface
+        public Object alert(String title, String content, Object callback) {
+            return Dialogs.this.alert(title, content, callback);
+        }
+
+    }
+}
Index: app/src/main/res/layout/activity_error_report.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n              xmlns:tools=\"http://schemas.android.com/tools\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"match_parent\"\n              android:orientation=\"vertical\">\n\n    <com.google.android.material.appbar.AppBarLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:theme=\"@style/AppTheme.AppBarOverlay\">\n\n        <com.stardust.theme.widget.ThemeColorToolbar\n            android:id=\"@+id/toolbar\"\n            android:theme=\"@style/ToolBarStyle\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"?attr/actionBarSize\"\n            android:background=\"?attr/colorPrimary\"\n            app:popupTheme=\"@style/AppTheme.PopupOverlay\">\n\n        </com.stardust.theme.widget.ThemeColorToolbar>\n    </com.google.android.material.appbar.AppBarLayout>\n\n    <TextView\n        android:id=\"@+id/error\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:padding=\"16dp\"\n        android:scrollbars=\"vertical\"\n        android:textColor=\"@android:color/secondary_text_light\"\n        android:textSize=\"16sp\"\n        tools:text=\"错误\"/>\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_error_report.xml b/app/src/main/res/layout/activity_error_report.xml
--- a/app/src/main/res/layout/activity_error_report.xml	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/app/src/main/res/layout/activity_error_report.xml	(date 1671456600086)
@@ -1,10 +1,10 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:app="http://schemas.android.com/apk/res-auto"
-              xmlns:tools="http://schemas.android.com/tools"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-              android:orientation="vertical">
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
 
     <com.google.android.material.appbar.AppBarLayout
         android:layout_width="match_parent"
@@ -13,10 +13,10 @@
 
         <com.stardust.theme.widget.ThemeColorToolbar
             android:id="@+id/toolbar"
-            android:theme="@style/ToolBarStyle"
             android:layout_width="match_parent"
             android:layout_height="?attr/actionBarSize"
             android:background="?attr/colorPrimary"
+            android:theme="@style/ToolBarStyle"
             app:popupTheme="@style/AppTheme.PopupOverlay">
 
         </com.stardust.theme.widget.ThemeColorToolbar>
@@ -30,5 +30,5 @@
         android:scrollbars="vertical"
         android:textColor="@android:color/secondary_text_light"
         android:textSize="16sp"
-        tools:text="错误"/>
+        tools:text="错误" />
 </LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/preference_custom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              xmlns:tools=\"http://schemas.android.com/tools\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"wrap_content\"\n              android:baselineAligned=\"false\"\n              android:gravity=\"center_vertical\"\n              android:minHeight=\"52dp\"\n              android:orientation=\"horizontal\"\n              android:paddingEnd=\"?android:attr/scrollbarSize\"\n              android:paddingRight=\"?android:attr/scrollbarSize\"\n              tools:ignore=\"RtlSymmetry,UnusedAttribute\">\n\n    <ImageView\n        android:id=\"@android:id/icon\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:layout_marginLeft=\"@dimen/md_preference_content_inset\"\n        android:layout_marginStart=\"@dimen/md_preference_content_inset\"\n        tools:ignore=\"ContentDescription\"/>\n\n    <LinearLayout\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"left|start|center_vertical\"\n        android:layout_marginBottom=\"12dip\"\n        android:layout_marginEnd=\"6dip\"\n        android:layout_marginLeft=\"12dp\"\n        android:layout_marginRight=\"6dip\"\n        android:layout_marginStart=\"12dp\"\n        android:layout_marginTop=\"12dip\"\n        android:layout_weight=\"1\"\n        android:orientation=\"vertical\">\n\n        <TextView\n            android:id=\"@android:id/title\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:ellipsize=\"marquee\"\n            android:fadingEdge=\"horizontal\"\n            android:fontFamily=\"sans-serif\"\n            android:maxLines=\"1\"\n            android:textColor=\"?android:textColorPrimary\"\n            android:textSize=\"15sp\"\n            tools:text=\"Title\"/>\n\n        <TextView\n            android:id=\"@android:id/summary\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"2dp\"\n            android:fontFamily=\"sans-serif\"\n            android:maxLines=\"4\"\n            android:textColor=\"?android:textColorSecondary\"\n            android:textSize=\"12sp\"\n            tools:text=\"\"/>\n\n    </LinearLayout>\n\n    <!-- Preference should place its actual preference widget here. -->\n    <LinearLayout\n        android:id=\"@android:id/widget_frame\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"end|right|center_vertical\"\n        android:gravity=\"center_vertical\"\n        android:orientation=\"vertical\"/>\n\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/preference_custom.xml b/app/src/main/res/layout/preference_custom.xml
--- a/app/src/main/res/layout/preference_custom.xml	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/app/src/main/res/layout/preference_custom.xml	(date 1671456600086)
@@ -40,10 +40,10 @@
             android:ellipsize="marquee"
             android:fadingEdge="horizontal"
             android:fontFamily="sans-serif"
-            android:maxLines="1"
             android:textColor="?android:textColorPrimary"
             android:textSize="15sp"
-            tools:text="Title"/>
+            tools:text="Title"
+            android:singleLine="true" />
 
         <TextView
             android:id="@android:id/summary"
Index: app/src/main/java/org/autojs/autojs/ui/main/market/ImageText.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.autojs.autojs.ui.main.market\n\nimport android.content.Context\nimport android.util.AttributeSet\nimport android.view.Gravity\nimport android.view.LayoutInflater\nimport android.widget.LinearLayout\nimport org.autojs.autojs.R\nimport org.autojs.autojs.databinding.ImageTextBinding\n\nclass ImageText : LinearLayout {\n    lateinit var inflate: ImageTextBinding\n    var text: CharSequence?\n        get() = inflate.textView.text\n        set(value) {\n            inflate.textView.text = value\n        }\n\n    constructor(context: Context?) : super(context) {\n        init(null)\n    }\n\n    constructor(context: Context?, attrs: AttributeSet?) : super(context, attrs) {\n        init(attrs)\n    }\n\n    constructor(context: Context?, attrs: AttributeSet?, defStyleAttr: Int) : super(\n        context,\n        attrs,\n        defStyleAttr\n    ) {\n        init(attrs)\n    }\n\n    private fun init(attrs: AttributeSet?) {\n        inflate = ImageTextBinding.inflate(LayoutInflater.from(context), this)\n        gravity = Gravity.CENTER\n        orientation = HORIZONTAL\n        if (attrs == null) {\n            return\n        }\n        val a = context.obtainStyledAttributes(attrs, R.styleable.ImageText)\n        a.getString(R.styleable.ImageText_text)?.let {\n            inflate.textView.text = it\n        }\n        val iconResId = a.getResourceId(R.styleable.ImageText_src, 0)\n        if (iconResId != 0) {\n            inflate.imageView.setImageResource(iconResId)\n        }\n        val imageWidth = a.getDimensionPixelSize(R.styleable.ImageText_image_width, 0)\n        if (imageWidth != 0) {\n            inflate.imageView.layoutParams.width = imageWidth\n        }\n        a.recycle()\n    }\n\n    fun setColor(color: Int) {\n        inflate.textView.setTextColor(color)\n        inflate.imageView.setColorFilter(color)\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/org/autojs/autojs/ui/main/market/ImageText.kt b/app/src/main/java/org/autojs/autojs/ui/main/market/ImageText.kt
--- a/app/src/main/java/org/autojs/autojs/ui/main/market/ImageText.kt	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/app/src/main/java/org/autojs/autojs/ui/main/market/ImageText.kt	(date 1671456600085)
@@ -25,9 +25,7 @@
     }
 
     constructor(context: Context?, attrs: AttributeSet?, defStyleAttr: Int) : super(
-        context,
-        attrs,
-        defStyleAttr
+        context, attrs, defStyleAttr
     ) {
         init(attrs)
     }
@@ -43,7 +41,7 @@
         a.getString(R.styleable.ImageText_text)?.let {
             inflate.textView.text = it
         }
-        val iconResId = a.getResourceId(R.styleable.ImageText_src, 0)
+        val iconResId = a.getResourceId(R.styleable.ImageText_it_src, 0)
         if (iconResId != 0) {
             inflate.imageView.setImageResource(iconResId)
         }
Index: bandage/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\n    id 'com.android.library'\n}\n\nandroid {\n    compileSdkVersion 30\n    buildToolsVersion \"30.0.3\"\n\n    defaultConfig {\n        minSdkVersion 17\n        targetSdkVersion 30\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n        consumerProguardFiles \"consumer-rules.pro\"\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n}\n\ndependencies {\n\n    implementation 'androidx.appcompat:appcompat:1.3.0'\n    implementation 'com.google.android.material:material:1.4.0'\n    testImplementation 'junit:junit:4.13.2'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bandage/build.gradle b/bandage/build.gradle
--- a/bandage/build.gradle	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/bandage/build.gradle	(date 1671456600091)
@@ -3,14 +3,11 @@
 }
 
 android {
-    compileSdkVersion 30
-    buildToolsVersion "30.0.3"
+    compileSdkVersion 31
 
     defaultConfig {
         minSdkVersion 17
-        targetSdkVersion 30
-        versionCode 1
-        versionName "1.0"
+        targetSdkVersion 31
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
         consumerProguardFiles "consumer-rules.pro"
@@ -30,9 +27,9 @@
 
 dependencies {
 
-    implementation 'androidx.appcompat:appcompat:1.3.0'
-    implementation 'com.google.android.material:material:1.4.0'
+    implementation 'androidx.appcompat:appcompat:1.5.1'
+    implementation 'com.google.android.material:material:1.7.0'
     testImplementation 'junit:junit:4.13.2'
-    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
-    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
+    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
+    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
 }
\ No newline at end of file
Index: autojs/src/main/java/com/stardust/autojs/core/activity/ActivityInfoProvider.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.stardust.autojs.core.activity\n\nimport android.accessibilityservice.AccessibilityService\nimport android.app.AppOpsManager\nimport android.app.usage.UsageStatsManager\nimport android.content.ComponentName\nimport android.content.Context\nimport android.content.pm.PackageManager\nimport android.os.Build\nimport android.os.SystemClock\nimport android.util.Log\nimport android.view.accessibility.AccessibilityEvent\nimport android.view.accessibility.AccessibilityWindowInfo\nimport androidx.annotation.RequiresApi\nimport com.stardust.app.isOpPermissionGranted\nimport com.stardust.autojs.core.util.Shell\nimport com.stardust.view.accessibility.AccessibilityDelegate\nimport java.util.regex.Pattern\n\n/**\n * Created by Stardust on 2017/3/9.\n */\n\nclass ActivityInfoProvider(private val context: Context) : AccessibilityDelegate {\n\n    private val mPackageManager: PackageManager = context.packageManager\n\n    @Volatile\n    private var mLatestPackage: String = \"\"\n    @Volatile\n    private var mLatestActivity: String = \"\"\n    private var mLatestComponentFromShell: ComponentName? = null\n\n    private var mShell: Shell? = null\n    private var mUseShell = false\n\n    val latestPackage: String\n        get() {\n            val compFromShell = mLatestComponentFromShell\n            if (useShell && compFromShell != null) {\n                return compFromShell.packageName\n            }\n            if (useUsageStats && Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP_MR1) {\n                mLatestPackage = getLatestPackageByUsageStats()\n            }\n            return mLatestPackage\n        }\n\n    val latestActivity: String\n        get() {\n            val compFromShell = mLatestComponentFromShell\n            if (useShell && compFromShell != null) {\n                return compFromShell.className\n            }\n            return mLatestActivity\n        }\n\n    var useUsageStats: Boolean = false\n\n    var useShell: Boolean\n        get() = mUseShell\n        set(value) {\n            if (value) {\n                mShell.let {\n                    if (it == null) {\n                        mShell = createShell(200)\n                    }\n                }\n            } else {\n                mShell?.exit()\n                mShell = null\n            }\n            mUseShell = value\n        }\n\n    override val eventTypes: Set<Int>?\n        get() = AccessibilityDelegate.ALL_EVENT_TYPES\n\n    override fun onAccessibilityEvent(service: AccessibilityService, event: AccessibilityEvent): Boolean {\n        if (event.eventType == AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED) {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n                val window = service.getWindow(event.windowId)\n                if (window?.isFocused != false) {\n                    setLatestComponent(event.packageName, event.className)\n                    return false\n                }\n            }\n        }\n        return false\n    }\n\n    fun getLatestPackageByUsageStatsIfGranted(): String {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP_MR1 && context.isOpPermissionGranted(AppOpsManager.OPSTR_GET_USAGE_STATS)) {\n            return getLatestPackageByUsageStats()\n        }\n        return mLatestPackage\n    }\n\n    private fun setLatestComponentFromShellOutput(output: String) {\n        val matcher = WINDOW_PATTERN.matcher(output)\n        if (!matcher.find() || matcher.groupCount() < 1) {\n            Log.w(LOG_TAG, \"invalid format: $output\")\n            return\n        }\n        val latestPackage = matcher.group(1)\n        if (latestPackage.contains(\":\")) {\n            return\n        }\n        val latestActivity = if (matcher.groupCount() >= 2) {\n            matcher.group(2).orEmpty()\n        } else {\n            \"\"\n        }\n        Log.d(LOG_TAG, \"setLatestComponent: output = $output, comp = $latestPackage/$latestActivity\")\n        mLatestComponentFromShell = ComponentName(latestPackage, latestActivity)\n    }\n\n    private fun createShell(dumpInterval: Int): Shell {\n        val shell = Shell(true)\n        shell.setCallback(object : Shell.Callback {\n            override fun onOutput(str: String) {\n\n            }\n\n            override fun onNewLine(line: String) {\n                setLatestComponentFromShellOutput(line)\n            }\n\n            override fun onInitialized() {\n            }\n\n            override fun onInterrupted(e: InterruptedException) {\n\n            }\n        })\n        shell.exec(DUMP_WINDOW_COMMAND.format(dumpInterval))\n        return shell\n    }\n\n    @RequiresApi(Build.VERSION_CODES.LOLLIPOP_MR1)\n    fun getLatestPackageByUsageStats(): String {\n        val usageStatsManager = context.getSystemService(Context.USAGE_STATS_SERVICE) as UsageStatsManager\n        val current = System.currentTimeMillis()\n        val usageStats = usageStatsManager.queryUsageStats(UsageStatsManager.INTERVAL_BEST, current - 60 * 60 * 1000, current)\n        return if (usageStats.isEmpty()) {\n            mLatestPackage\n        } else {\n            usageStats.sortBy {\n                it.lastTimeStamp\n            }\n            usageStats.last().packageName\n        }\n\n    }\n\n    private fun setLatestComponent(latestPackage: CharSequence?, latestClass: CharSequence?) {\n        if (latestPackage == null)\n            return\n        val latestPackageStr = latestPackage.toString()\n        val latestClassStr = (latestClass ?: \"\").toString()\n        if (isPackageExists(latestPackageStr)) {\n            mLatestPackage = latestPackage.toString()\n            mLatestActivity = latestClassStr\n        }\n        Log.d(LOG_TAG, \"setLatestComponent: $latestPackage/$latestClassStr $mLatestPackage/$mLatestActivity\")\n    }\n\n    private fun isPackageExists(packageName: String): Boolean {\n        return try {\n            mPackageManager.getPackageInfo(packageName, 0)\n            true\n        } catch (e: PackageManager.NameNotFoundException) {\n            false\n        }\n    }\n\n    companion object {\n        private val WINDOW_PATTERN = Pattern.compile(\"Window\\\\{\\\\S+\\\\s\\\\S+\\\\s([^\\\\/]+)\\\\/?([^}]+)?\\\\}\")\n        private val DUMP_WINDOW_COMMAND = \"\"\"\n            oldActivity=\"\"\n            currentActivity=`dumpsys window windows | grep -E 'mCurrentFocus'`\n            while true\n            do\n                if [[ ${'$'}oldActivity != ${'$'}currentActivity && ${'$'}currentActivity != *\"=null\"* ]]; then\n                    echo ${'$'}currentActivity\n                    oldActivity=${'$'}currentActivity\n                fi\n                currentActivity=`dumpsys window windows | grep -E 'mCurrentFocus'`\n            done\n        \"\"\".trimIndent()\n\n        private const val LOG_TAG = \"ActivityInfoProvider\"\n    }\n}\n\n@RequiresApi(Build.VERSION_CODES.LOLLIPOP)\nprivate fun AccessibilityService.getWindow(windowId: Int): AccessibilityWindowInfo? {\n    windows.forEach {\n        if (it.id == windowId) {\n            return it\n        }\n    }\n    return null\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/autojs/src/main/java/com/stardust/autojs/core/activity/ActivityInfoProvider.kt b/autojs/src/main/java/com/stardust/autojs/core/activity/ActivityInfoProvider.kt
--- a/autojs/src/main/java/com/stardust/autojs/core/activity/ActivityInfoProvider.kt	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/autojs/src/main/java/com/stardust/autojs/core/activity/ActivityInfoProvider.kt	(date 1671456600089)
@@ -103,7 +103,7 @@
             return
         }
         val latestPackage = matcher.group(1)
-        if (latestPackage.contains(":")) {
+        if (latestPackage?.contains(":") == true) {
             return
         }
         val latestActivity = if (matcher.groupCount() >= 2) {
Index: automator/src/main/java/com/stardust/automator/search/BFS.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.stardust.automator.search\n\nimport com.stardust.automator.UiObject\nimport com.stardust.automator.filter.Filter\nimport java.util.*\nimport kotlin.collections.ArrayList\n\nobject BFS : SearchAlgorithm {\n\n    override fun search(root: UiObject, filter: Filter, limit: Int): ArrayList<UiObject> {\n        val result = ArrayList<UiObject>()\n        val queue = ArrayDeque<UiObject>()\n        queue.add(root)\n        while (!queue.isEmpty()) {\n            val top = queue.poll()\n            val isTarget = filter.filter(top)\n            if (isTarget) {\n                result.add(top)\n                if (result.size > limit) {\n                    return result\n                }\n            }\n            for (i in 0 until top.childCount) {\n                queue.add(top.child(i) ?: continue)\n            }\n            if (!isTarget && top !== root) {\n                top.recycle()\n            }\n        }\n        return result\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/automator/src/main/java/com/stardust/automator/search/BFS.kt b/automator/src/main/java/com/stardust/automator/search/BFS.kt
--- a/automator/src/main/java/com/stardust/automator/search/BFS.kt	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/automator/src/main/java/com/stardust/automator/search/BFS.kt	(date 1671456600091)
@@ -12,7 +12,7 @@
         val queue = ArrayDeque<UiObject>()
         queue.add(root)
         while (!queue.isEmpty()) {
-            val top = queue.poll()
+            val top = queue.poll()!!
             val isTarget = filter.filter(top)
             if (isTarget) {
                 result.add(top)
Index: automator/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.library'\napply plugin: 'kotlin-android'\n\nandroid {\n    compileSdkVersion versions.compile\n    buildToolsVersion versions.buildTool\n\n    defaultConfig {\n        minSdkVersion versions.mini\n        targetSdkVersion versions.target\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n    lintOptions {\n        abortOnError false\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n    buildFeatures {\n        viewBinding true\n    }\n\n}\n\nrepositories {\n    google()\n}\n\ndependencies {\n    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {\n        exclude group: 'com.android.support', module: 'support-annotations'\n    })\n    testImplementation 'junit:junit:4.13.2'\n    api 'androidx.appcompat:appcompat:1.3.0'\n    api project(path: ':common')\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/automator/build.gradle b/automator/build.gradle
--- a/automator/build.gradle	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/automator/build.gradle	(date 1671456600090)
@@ -3,13 +3,10 @@
 
 android {
     compileSdkVersion versions.compile
-    buildToolsVersion versions.buildTool
 
     defaultConfig {
         minSdkVersion versions.mini
         targetSdkVersion versions.target
-        versionCode 1
-        versionName "1.0"
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
 
@@ -38,10 +35,10 @@
 }
 
 dependencies {
-    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {
+    androidTestImplementation('androidx.test.espresso:espresso-core:3.5.0', {
         exclude group: 'com.android.support', module: 'support-annotations'
     })
     testImplementation 'junit:junit:4.13.2'
-    api 'androidx.appcompat:appcompat:1.3.0'
+    api 'androidx.appcompat:appcompat:1.5.1'
     api project(path: ':common')
 }
Index: inrt/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\napply plugin: 'kotlin-android'\n\nandroid {\n    compileSdkVersion versions.compile\n    buildToolsVersion versions.buildTool\n\n    defaultConfig {\n        applicationId \"com.stardust.auojs.inrt\"\n        minSdkVersion versions.mini\n        targetSdkVersion versions.target\n        versionCode versions.appVersionCode - 200\n        versionName versions.appVersionName\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n        multiDexEnabled true\n    }\n    lintOptions {\n        abortOnError false\n        disable 'MissingTranslation'\n        disable 'ExtraTranslation'\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n    splits {\n\n        // Configures multiple APKs based on ABI.\n        abi {\n\n            // Enables building multiple APKs per ABI.\n            enable true\n\n            // By default all ABIs are included, so use reset() and include to specify that we only\n            // want APKs for x86 and x86_64.\n\n            // Resets the list of ABIs that Gradle should create APKs for to none.\n            reset()\n\n            // Specifies a list of ABIs that Gradle should create APKs for.\n            include \"x86\", \"armeabi-v7a\"\n\n            // Specifies that we do not want to also generate a universal APK that includes all ABIs.\n            universalApk false\n        }\n    }\n    buildTypes {\n        debug {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n    buildFeatures {\n        viewBinding true\n    }\n\n}\n\ndef buildApkPluginForAbi(File pluginProjectDir, String abi) {\n    copy {\n        from file('..\\\\app\\\\release\\\\')\n        into new File(pluginProjectDir, 'app\\\\src\\\\main\\\\assets')\n        def fileName = \"inrt-\" + abi + \"-release.apk\"\n        include fileName\n        rename fileName, 'template.apk'\n    }\n    exec {\n        workingDir pluginProjectDir\n        commandLine 'gradlew.bat', 'assembleRelease'\n    }\n    copy {\n        from new File(pluginProjectDir, 'app\\\\build\\\\outputs\\\\apk\\\\release')\n        into file('..\\\\common\\\\release')\n        def fileName = '打包插件-' + versions.appVersionName + '-release.apk'\n        include fileName\n        rename fileName, '打包插件-' + abi + '-' + versions.appVersionName + '-release.apk'\n    }\n}\n\ntask buildApkPlugin {\n    doLast {\n        def pluginProjectDirPath = '..\\\\..\\\\AutoJsApkBuilderPlugin'\n        def pluginProjectDir = file(pluginProjectDirPath)\n        if (!pluginProjectDir.exists() || !pluginProjectDir.isDirectory()) {\n            println 'pluginProjectDir not exists'\n            return\n        }\n        buildApkPluginForAbi(pluginProjectDir, 'armeabi-v7a')\n        buildApkPluginForAbi(pluginProjectDir, 'x86')\n    }\n}\n\ntasks.whenTaskAdded { task ->\n    if (task.name == 'assembleRelease') {\n        task.finalizedBy 'buildApkPlugin'\n    }\n}\n\nrepositories {\n    google()\n}\n\ndependencies {\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\n    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {\n        exclude group: 'com.android.support', module: 'support-annotations'\n    })\n    //Glide\n    implementation('com.github.bumptech.glide:glide:4.2.0', {\n        exclude group: 'com.android.support'\n    })\n    testImplementation 'junit:junit:4.13.2'\n    implementation project(':automator')\n    implementation project(':common')\n    implementation project(':autojs')\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inrt/build.gradle b/inrt/build.gradle
--- a/inrt/build.gradle	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/inrt/build.gradle	(date 1671456600092)
@@ -3,7 +3,6 @@
 
 android {
     compileSdkVersion versions.compile
-    buildToolsVersion versions.buildTool
 
     defaultConfig {
         applicationId "com.stardust.auojs.inrt"
@@ -106,11 +105,11 @@
 
 dependencies {
     implementation fileTree(dir: 'libs', include: ['*.jar'])
-    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {
+    androidTestImplementation('androidx.test.espresso:espresso-core:3.5.0', {
         exclude group: 'com.android.support', module: 'support-annotations'
     })
     //Glide
-    implementation('com.github.bumptech.glide:glide:4.2.0', {
+    implementation('com.github.bumptech.glide:glide:4.14.2', {
         exclude group: 'com.android.support'
     })
     testImplementation 'junit:junit:4.13.2'
Index: inrt/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n          xmlns:tools=\"http://schemas.android.com/tools\"\n          package=\"com.stardust.auojs.inrt\">\n\n\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\"/>\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"com.android.launcher.permission.INSTALL_SHORTCUT\"/>\n    <uses-permission android:name=\"com.android.launcher.permission.UNINSTALL_SHORTCUT\"/>\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\n    <uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/>\n\n\n    <!-- 非Auto.js运行必需，不会主动申请，某些脚本可以自行申请-->\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\"/>\n\n\n    <application\n        android:name=\".App\"\n        android:allowBackup=\"false\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"inrt\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/ScriptTheme\"\n        android:usesCleartextTraffic=\"true\"\n        tools:ignore=\"GoogleAppIndexingWarning\"\n        tools:replace=\"android:label, android:allowBackup\"\n        tools:targetApi=\"m\">\n        <activity android:name=\".LogActivity\">\n\n        </activity>\n\n        <activity\n            android:name=\".SplashActivity\"\n            android:theme=\"@style/AppTheme.Splash\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\"/>\n\n                <category android:name=\"android.intent.category.LAUNCHER\"/>\n            </intent-filter>\n        </activity>\n\n        <activity android:name=\".SettingsActivity\"/>\n\n        <service\n            android:name=\"com.stardust.notification.NotificationListenerService\"\n            android:label=\"inrt\"\n            android:permission=\"android.permission.BIND_NOTIFICATION_LISTENER_SERVICE\">\n            <intent-filter>\n                <action android:name=\"android.service.notification.NotificationListenerService\"/>\n            </intent-filter>\n        </service>\n        <provider\n            android:name=\"androidx.core.content.FileProvider\"\n            android:authorities=\"org.autojs.autojs.inrt.fileprovider\"\n            android:exported=\"false\"\n            android:grantUriPermissions=\"true\">\n            <meta-data\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\n                android:resource=\"@xml/provider_paths\"/>\n        </provider>\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inrt/src/main/AndroidManifest.xml b/inrt/src/main/AndroidManifest.xml
--- a/inrt/src/main/AndroidManifest.xml	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/inrt/src/main/AndroidManifest.xml	(date 1671456600092)
@@ -36,7 +36,8 @@
 
         <activity
             android:name=".SplashActivity"
-            android:theme="@style/AppTheme.Splash">
+            android:theme="@style/AppTheme.Splash"
+            android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN"/>
 
@@ -49,7 +50,8 @@
         <service
             android:name="com.stardust.notification.NotificationListenerService"
             android:label="inrt"
-            android:permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE">
+            android:permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE"
+            android:exported="true">
             <intent-filter>
                 <action android:name="android.service.notification.NotificationListenerService"/>
             </intent-filter>
Index: app/src/main/res/values/attrs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n\n    <attr name=\"title\" format=\"string|reference\"/>\n    <attr name=\"icon\" format=\"reference\"/>\n    <attr name=\"drawer_item_text_color\" format=\"color|reference\"/>\n    <attr name=\"drawer_group_text_color\" format=\"color|reference\"/>\n    <attr name=\"itemBackgroundDark\" format=\"color|reference\"/>\n\n    <declare-styleable name=\"ToolbarMenuItem\">\n        <attr name=\"text\" format=\"string|reference\"/>\n        <attr name=\"icon\"/>\n        <attr name=\"icon_color\" format=\"color|reference\"/>\n    </declare-styleable>\n\n    <declare-styleable name=\"PrefSwitch\">\n        <attr name=\"key\" format=\"string|reference\"/>\n        <attr name=\"defaultValue\" format=\"boolean\"/>\n    </declare-styleable>\n\n    <declare-styleable name=\"DrawerMenuItem\">\n        <attr name=\"title\"/>\n        <attr name=\"icon\"/>\n        <attr name=\"with_switch\" format=\"boolean\"/>\n        <attr name=\"pref_key\" format=\"string|reference\"/>\n        <attr name=\"anti_shake\" format=\"boolean\"/>\n    </declare-styleable>\n\n    <declare-styleable name=\"DrawerMenuGroup\">\n        <attr name=\"title\"/>\n    </declare-styleable>\n\n    <declare-styleable name=\"CircularActionMenu\">\n        <attr name=\"cam_radius\" format=\"dimension|reference\"/>\n        <attr name=\"cam_angle\" format=\"integer\"/>\n    </declare-styleable>\n\n    <declare-styleable name=\"ImageText\">\n        <attr name=\"text\"/>\n        <attr name=\"src\"/>\n        <attr name=\"image_width\" format=\"dimension|reference\"/>\n    </declare-styleable>\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/attrs.xml b/app/src/main/res/values/attrs.xml
--- a/app/src/main/res/values/attrs.xml	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/app/src/main/res/values/attrs.xml	(date 1671456600086)
@@ -37,7 +37,7 @@
 
     <declare-styleable name="ImageText">
         <attr name="text"/>
-        <attr name="src"/>
+        <attr name="it_src" format="reference"/>
         <attr name="image_width" format="dimension|reference"/>
     </declare-styleable>
 
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\napply plugin: 'kotlin-android'\napply plugin: 'kotlin-kapt'\n\ndef AAVersion = '4.5.2'\ndef SupportLibVersion = '30.0.2'\n\nconfigurations.all {\n    resolutionStrategy {\n        force \"com.android.support:appcompat-v7:${SupportLibVersion}\"\n        force \"com.android.support:support-v4:${SupportLibVersion}\"\n    }\n}\n\nandroid {\n    compileSdkVersion versions.compile\n    buildToolsVersion versions.buildTool\n    defaultConfig {\n        applicationId \"org.autojs.autojs\"\n        minSdkVersion versions.mini\n        targetSdkVersion versions.target\n        versionCode versions.appVersionCode\n        versionName versions.appVersionName\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n        multiDexEnabled true\n    }\n    buildTypes {\n        debug {\n            shrinkResources false\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n        release {\n            shrinkResources false\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n        encoding = 'utf-8'\n    }\n    lintOptions {\n        abortOnError false\n        disable 'MissingTranslation'\n        disable 'ExtraTranslation'\n    }\n\n    configurations.all {\n        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'\n    }\n\n    flavorDimensions \"channel\"\n    splits {\n\n        // Configures multiple APKs based on ABI.\n        abi {\n\n            // Enables building multiple APKs per ABI.\n            enable true\n\n            // By default all ABIs are included, so use reset() and include to specify that we only\n            // want APKs for x86 and x86_64.\n\n            // Resets the list of ABIs that Gradle should create APKs for to none.\n            reset()\n\n            // Specifies a list of ABIs that Gradle should create APKs for.\n            include \"x86\", \"armeabi-v7a\"\n\n            // Specifies that we do not want to also generate a universal APK that includes all ABIs.\n            universalApk false\n        }\n    }\n    productFlavors {\n        common {\n            buildConfigField \"String\", \"CHANNEL\", '\"common\"'\n        }\n        coolapk {\n            buildConfigField \"String\", \"CHANNEL\", '\"coolapk\"'\n        }\n    }\n    buildFeatures {\n        viewBinding true\n    }\n\n\n}\n\n\nrepositories {\n    google()\n}\n\ndependencies {\n    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {\n        exclude group: 'com.android.support', module: 'support-annotations'\n    })\n    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])\n\n    testImplementation 'junit:junit:4.13.2'\n    // Kotlin\n    implementation \"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3\"\n    // Android Annotations\n    annotationProcessor \"org.androidannotations:androidannotations:$AAVersion\"\n    implementation \"org.androidannotations:androidannotations-api:$AAVersion\"\n    // Android supports\n    implementation 'androidx.appcompat:appcompat:1.3.0'\n    implementation 'androidx.cardview:cardview:1.0.0'\n    implementation 'com.google.android.material:material:1.5.0-alpha01'\n    implementation 'androidx.multidex:multidex:2.0.1'\n    // Personal libraries\n    implementation 'com.github.hyb1996:MutableTheme:1.0.0'\n    // Material Dialogs\n    implementation('com.afollestad.material-dialogs:core:0.9.2.3', {\n        exclude group: 'com.android.support'\n    })\n//    implementation('com.afollestad.material-dialogs:commons:0.9.2.3', {\n//        exclude group: 'com.android.support'\n//    })\n\n    // Common Markdown\n    implementation 'com.github.atlassian:commonmark-java:commonmark-parent-0.9.0'\n    // Android issue reporter (a github issue reporter)\n    implementation('com.heinrichreimersoftware:android-issue-reporter:1.3.1', {\n        exclude group: 'com.afollestad.material-dialogs'\n        exclude group: 'com.android.support'\n    })\n    //MultiLevelListView\n    implementation 'com.github.hyb1996:android-multi-level-listview:1.1'\n    //Licenses Dialog\n    implementation 'de.psdev.licensesdialog:licensesdialog:1.8.1'\n    //Expandable RecyclerView\n    implementation 'com.bignerdranch.android:expandablerecyclerview:3.0.0-RC1'\n    //FlexibleDivider\n    implementation 'com.yqritc:recyclerview-flexibledivider:1.4.0'\n    //???\n    implementation 'com.wang.avi:library:2.1.3'\n    //Commons-lang\n    implementation 'org.apache.commons:commons-lang3:3.11'\n    //Expandable RecyclerView\n    implementation 'com.thoughtbot:expandablerecyclerview:1.3'\n    implementation 'com.github.hyb1996:Auto.js-ApkBuilder:1.0.1'\n    // RxJava\n    implementation \"io.reactivex.rxjava2:rxjava:2.2.9\"\n    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'\n    // Retrofit\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\n    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'\n    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'\n    //Glide\n    implementation('com.github.bumptech.glide:glide:4.8.0', {\n        exclude group: 'com.android.support'\n    })\n    annotationProcessor  'com.github.bumptech.glide:compiler:4.12.0'\n    //joda time\n    implementation 'joda-time:joda-time:2.9.9'\n    // Tasker Plugin\n//    implementation 'com.twofortyfouram:android-plugin-client-sdk-for-locale:4.0.3'\n    implementation group: 'com.twofortyfouram', name: 'android-plugin-client-sdk-for-locale', version: '[4.0.3, 5.0]'\n\n    // Flurry\n    implementation 'com.flurry.android:analytics:7.0.0@aar'\n    // Bugly\n//    implementation 'com.tencent.bugly:crashreport:2.6.6'\n    // MaterialDialogCommon\n    implementation('com.afollestad.material-dialogs:commons:0.9.2.3', {\n        exclude group: 'com.android.support'\n    })\n    // Android job\n    implementation 'com.evernote:android-job:1.2.6'\n    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'\n    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'\n    // Optional, if you use support library fragments:\n    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'\n//    implementation 'me.zhanghai.android.materialprogressbar:library:1.6.1'\n\n    implementation project(':common')\n    implementation project(':autojs')\n    implementation project(':bandage')\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/app/build.gradle	(date 1671456600085)
@@ -2,7 +2,7 @@
 apply plugin: 'kotlin-android'
 apply plugin: 'kotlin-kapt'
 
-def AAVersion = '4.5.2'
+def AAVersion = '4.8.0'
 def SupportLibVersion = '30.0.2'
 
 configurations.all {
@@ -14,7 +14,6 @@
 
 android {
     compileSdkVersion versions.compile
-    buildToolsVersion versions.buildTool
     defaultConfig {
         applicationId "org.autojs.autojs"
         minSdkVersion versions.mini
@@ -94,26 +93,26 @@
 }
 
 dependencies {
-    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {
+    androidTestImplementation('androidx.test.espresso:espresso-core:3.5.0', {
         exclude group: 'com.android.support', module: 'support-annotations'
     })
     implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
 
     testImplementation 'junit:junit:4.13.2'
     // Kotlin
-    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3"
+    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
     // Android Annotations
-    annotationProcessor "org.androidannotations:androidannotations:$AAVersion"
+    kapt "org.androidannotations:androidannotations:$AAVersion"
     implementation "org.androidannotations:androidannotations-api:$AAVersion"
     // Android supports
-    implementation 'androidx.appcompat:appcompat:1.3.0'
+    implementation 'androidx.appcompat:appcompat:1.5.1'
     implementation 'androidx.cardview:cardview:1.0.0'
-    implementation 'com.google.android.material:material:1.5.0-alpha01'
+    implementation 'com.google.android.material:material:1.8.0-beta01'
     implementation 'androidx.multidex:multidex:2.0.1'
     // Personal libraries
     implementation 'com.github.hyb1996:MutableTheme:1.0.0'
     // Material Dialogs
-    implementation('com.afollestad.material-dialogs:core:0.9.2.3', {
+    implementation('com.afollestad.material-dialogs:core:3.3.0', {
         exclude group: 'com.android.support'
     })
 //    implementation('com.afollestad.material-dialogs:commons:0.9.2.3', {
@@ -123,14 +122,14 @@
     // Common Markdown
     implementation 'com.github.atlassian:commonmark-java:commonmark-parent-0.9.0'
     // Android issue reporter (a github issue reporter)
-    implementation('com.heinrichreimersoftware:android-issue-reporter:1.3.1', {
+    implementation('com.heinrichreimersoftware:android-issue-reporter:1.4', {
         exclude group: 'com.afollestad.material-dialogs'
         exclude group: 'com.android.support'
     })
     //MultiLevelListView
     implementation 'com.github.hyb1996:android-multi-level-listview:1.1'
     //Licenses Dialog
-    implementation 'de.psdev.licensesdialog:licensesdialog:1.8.1'
+    implementation 'de.psdev.licensesdialog:licensesdialog:2.2.0'
     //Expandable RecyclerView
     implementation 'com.bignerdranch.android:expandablerecyclerview:3.0.0-RC1'
     //FlexibleDivider
@@ -138,13 +137,13 @@
     //???
     implementation 'com.wang.avi:library:2.1.3'
     //Commons-lang
-    implementation 'org.apache.commons:commons-lang3:3.11'
+    implementation 'org.apache.commons:commons-lang3:3.12.0'
     //Expandable RecyclerView
     implementation 'com.thoughtbot:expandablerecyclerview:1.3'
     implementation 'com.github.hyb1996:Auto.js-ApkBuilder:1.0.1'
     // RxJava
-    implementation "io.reactivex.rxjava2:rxjava:2.2.9"
-    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
+    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
+    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
     // Retrofit
     implementation 'com.squareup.retrofit2:retrofit:2.9.0'
     implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
@@ -152,28 +151,28 @@
     implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
     implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
     //Glide
-    implementation('com.github.bumptech.glide:glide:4.8.0', {
+    implementation('com.github.bumptech.glide:glide:4.14.2', {
         exclude group: 'com.android.support'
     })
-    annotationProcessor  'com.github.bumptech.glide:compiler:4.12.0'
+    kapt 'com.github.bumptech.glide:compiler:4.14.2'
     //joda time
-    implementation 'joda-time:joda-time:2.9.9'
+    implementation 'joda-time:joda-time:2.12.2'
     // Tasker Plugin
 //    implementation 'com.twofortyfouram:android-plugin-client-sdk-for-locale:4.0.3'
-    implementation group: 'com.twofortyfouram', name: 'android-plugin-client-sdk-for-locale', version: '[4.0.3, 5.0]'
+    implementation group: 'com.twofortyfouram', name: 'android-plugin-client-sdk-for-locale', version: '4.0.3'
 
     // Flurry
-    implementation 'com.flurry.android:analytics:7.0.0@aar'
+    implementation 'com.flurry.android:analytics:14.0.0@aar'
     // Bugly
 //    implementation 'com.tencent.bugly:crashreport:2.6.6'
     // MaterialDialogCommon
-    implementation('com.afollestad.material-dialogs:commons:0.9.2.3', {
+    implementation('com.afollestad.material-dialogs:commons:0.9.6.0', {
         exclude group: 'com.android.support'
     })
     // Android job
-    implementation 'com.evernote:android-job:1.2.6'
-    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'
-    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
+    implementation 'com.evernote:android-job:1.4.3'
+    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.10'
+    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
     // Optional, if you use support library fragments:
     debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
 //    implementation 'me.zhanghai.android.materialprogressbar:library:1.6.1'
Index: autojs/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.library'\napply plugin: 'kotlin-android'\n\nandroid {\n    compileSdkVersion versions.compile\n    buildToolsVersion versions.buildTool\n\n    defaultConfig {\n        minSdkVersion versions.mini\n        targetSdkVersion versions.target\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n\n\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n    lintOptions {\n        abortOnError false\n    }\n    buildFeatures {\n        viewBinding true\n    }\n\n}\n\nrepositories {\n    google()\n}\n\ndependencies {\n    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {\n        exclude group: 'com.android.support', module: 'support-annotations'\n    })\n    testImplementation 'junit:junit:4.13.2'\n    implementation fileTree(dir: 'libs',include: ['*.jar', '*.aar'])\n    api 'org.greenrobot:eventbus:3.0.0'\n    api 'net.lingala.zip4j:zip4j:1.3.2'\n    api('com.afollestad.material-dialogs:core:0.9.2.3', {\n        exclude group: 'com.android.support'\n    })\n    api 'com.google.android.material:material:1.5.0-alpha01'\n    api 'com.github.hyb1996:EnhancedFloaty:0.31'\n    api 'com.makeramen:roundedimageview:2.3.0'\n    // OpenCv\n//    api(name: 'opencv-3.4.3', ext: 'aar')\n    // OkHttp\n    api 'com.squareup.okhttp3:okhttp:5.0.0-alpha.10'\n    // JDeferred\n    api 'org.jdeferred:jdeferred-android-aar:1.2.6'\n    //RootShell\n    api 'com.github.Stericson:RootShell:1.6'\n    // Gson\n    api 'com.google.code.gson:gson:2.10'\n    // log4j\n    api group: 'de.mindpipe.android', name: 'android-logging-log4j', version: '1.0.3'\n    api group: 'log4j', name: 'log4j', version: '1.2.17'\n    // Terminal emulator\n//    api(name: 'libtermexec-release', ext: 'aar')\n//    api(name: 'emulatorview-release', ext: 'aar')\n//    api(name: 'term-debug', ext: 'aar')\n    api files('libs/rhino-1.7.7.2.jar')\n    api project(path: ':common')\n    api project(path: ':automator')\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/autojs/build.gradle b/autojs/build.gradle
--- a/autojs/build.gradle	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/autojs/build.gradle	(date 1671456834375)
@@ -3,13 +3,10 @@
 
 android {
     compileSdkVersion versions.compile
-    buildToolsVersion versions.buildTool
 
     defaultConfig {
         minSdkVersion versions.mini
         targetSdkVersion versions.target
-        versionCode 1
-        versionName "1.0"
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
 
@@ -40,17 +37,18 @@
 }
 
 dependencies {
-    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {
+    androidTestImplementation('androidx.test.espresso:espresso-core:3.5.0', {
         exclude group: 'com.android.support', module: 'support-annotations'
     })
     testImplementation 'junit:junit:4.13.2'
     implementation fileTree(dir: 'libs',include: ['*.jar', '*.aar'])
-    api 'org.greenrobot:eventbus:3.0.0'
+    api 'org.greenrobot:eventbus:3.3.1'
     api 'net.lingala.zip4j:zip4j:1.3.2'
-    api('com.afollestad.material-dialogs:core:0.9.2.3', {
+    api('com.afollestad.material-dialogs:core:3.3.0', {
         exclude group: 'com.android.support'
     })
-    api 'com.google.android.material:material:1.5.0-alpha01'
+    implementation 'com.afollestad.material-dialogs:input:3.3.0'
+    api 'com.google.android.material:material:1.8.0-beta01'
     api 'com.github.hyb1996:EnhancedFloaty:0.31'
     api 'com.makeramen:roundedimageview:2.3.0'
     // OpenCv
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import groovy.json.JsonSlurper\n\n// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    ext.kotlin_version = '1.5.21'\n    repositories {\n        google()\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:4.2.2'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n\n    }\n}\n\nallprojects {\n    repositories {\n        mavenCentral()\n        jcenter()\n        maven {\n            url \"https://jitpack.io\"\n        }\n        google()\n        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n\next {\n    versions = new JsonSlurper().parse(file('./project-versions.json'))\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/build.gradle	(date 1671456600091)
@@ -3,13 +3,13 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 
 buildscript {
-    ext.kotlin_version = '1.5.21'
+    ext.kotlin_version = '1.7.21'
     repositories {
         google()
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:4.2.2'
+        classpath 'com.android.tools.build:gradle:7.3.1'
         classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
 
     }
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n\n\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n        <item name=\"colorAccent\">@color/colorAccent</item>\n        <item name=\"android:textColorPrimary\">@color/text_color_secondary</item>\n        <item name=\"android:textColorSecondary\">@color/text_color_thirdly</item>\n        <item name=\"android:windowBackground\">@color/window_background</item>\n        <item name=\"android:itemBackground\">@color/item_background</item>\n        <item name=\"itemBackgroundDark\">@color/item_background_dark</item>\n        <item name=\"android:divider\">@color/divider</item>\n        <item name=\"drawer_item_text_color\">@color/drawer_menu_item_text_color</item>\n        <item name=\"drawer_group_text_color\">@color/drawer_menu_group_text_color</item>\n    </style>\n\n    <style name=\"ToolBarStyle\" parent=\"ThemeOverlay.AppCompat.ActionBar\">\n        <item name=\"android:textColorPrimary\">@color/toolbar</item>\n        <item name=\"android:textColorSecondary\">@color/toolbar</item>\n        <item name=\"actionMenuTextColor\">@color/toolbar</item>\n    </style>\n\n    <style name=\"EditorTheme\" parent=\"AppTheme\">\n        <item name=\"android:windowActionModeOverlay\">true</item>\n        <item name=\"android:actionModeBackground\">@color/colorAccent</item>\n    </style>\n\n    <style name=\"AppTheme.FullScreen\" parent=\"AppTheme\">\n        <item name=\"windowNoTitle\">true</item>\n        <item name=\"windowActionBar\">false</item>\n    </style>\n\n    <style name=\"AppTheme.Splash\" parent=\"@android:style/Theme.Light.NoTitleBar.Fullscreen\">\n        <item name=\"windowNoTitle\">true</item>\n        <item name=\"windowActionBar\">false</item>\n    </style>\n\n    <style name=\"AppTheme.Settings\" parent=\"AppTheme\">\n        <item name=\"android:dividerHeight\">6dp</item>\n        <item name=\"android:listDivider\">@drawable/pref_divider</item>\n        <item name=\"android:textColorPrimary\">@color/prefTextColorPrimary</item>\n        <item name=\"android:textColorSecondary\">@color/prefTextColorSecondary</item>\n    </style>\n\n\n    <style name=\"AppTheme.Transparent\" parent=\"AppTheme\">\n        <item name=\"android:windowIsTranslucent\">true</item>\n        <item name=\"android:windowBackground\">@android:color/transparent</item>\n        <item name=\"android:windowContentOverlay\">@null</item>\n        <item name=\"android:windowNoTitle\">true</item>\n        <item name=\"android:windowIsFloating\">true</item>\n        <item name=\"android:backgroundDimEnabled\">false</item>\n    </style>\n\n    <style name=\"IssueReporterTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n        <item name=\"colorAccent\">@color/colorAccent</item>\n\n        <item name=\"cardBackgroundColor\">#FFFFFF</item>\n        <item name=\"colorButtonNormal\">?colorAccent</item>\n\n    </style>\n\n    <style name=\"AppTheme.AppBarOverlay\" parent=\"ThemeOverlay.AppCompat.ActionBar\"/>\n\n    <style name=\"AppTheme.PopupOverlay\" parent=\"ThemeOverlay.AppCompat.ActionBar\">\n        <item name=\"android:textColorPrimary\">#212121</item>\n        <item name=\"android:textColorSecondary\">@color/colorAccent</item>\n    </style>\n\n</resources>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
--- a/app/src/main/res/values/styles.xml	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/app/src/main/res/values/styles.xml	(date 1671456600086)
@@ -63,7 +63,7 @@
 
     </style>
 
-    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.ActionBar"/>
+    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.ActionBar" />
 
     <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.ActionBar">
         <item name="android:textColorPrimary">#212121</item>
Index: autojs/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n\n          package=\"com.stardust.autojs\"\n    >\n\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\"/>\n    <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\n    <uses-permission android:name=\"android.permission.VIBRATE\"/>\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\"/>\n    <uses-permission android:name=\"android.permission.REQUEST_INSTALL_PACKAGES\"/>\n    <uses-permission android:name=\"android.permission.WRITE_SETTINGS\"/>\n    <uses-permission android:name=\"android.permission.WRITE_SECURE_SETTINGS\"/>\n\n    <application\n        >\n        <activity\n            android:name=\".execution.ScriptExecuteActivity\"\n            android:configChanges=\"keyboardHidden|orientation|screenSize\"\n            android:theme=\"@style/ScriptTheme\"/>\n\n\n        <activity\n            android:name=\"com.stardust.autojs.core.permission.PermissionRequestActivity\"\n            android:excludeFromRecents=\"true\"\n            android:taskAffinity=\"com.stardust.autojs.runtime.api.image.ScreenCaptureRequestActivity\"\n            android:theme=\"@style/ScriptTheme.Transparent\"/>\n\n        <activity\n            android:name=\"com.stardust.autojs.core.image.capture.ScreenCaptureRequestActivity\"\n            android:excludeFromRecents=\"true\"\n            android:taskAffinity=\"com.stardust.autojs.runtime.api.image.ScreenCaptureRequestActivity\"\n            android:theme=\"@style/ScriptTheme.Transparent\"/>\n\n        <service\n            android:name=\"com.stardust.autojs.core.accessibility.AccessibilityService\"\n            android:permission=\"android.permission.BIND_ACCESSIBILITY_SERVICE\">\n            <intent-filter>\n                <action android:name=\"android.accessibilityservice.AccessibilityService\"/>\n            </intent-filter>\n\n            <meta-data\n                android:name=\"android.accessibilityservice\"\n                android:resource=\"@xml/accessibility_service_config\"/>\n        </service>\n\n    </application>\n\n</manifest>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/autojs/src/main/AndroidManifest.xml b/autojs/src/main/AndroidManifest.xml
--- a/autojs/src/main/AndroidManifest.xml	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/autojs/src/main/AndroidManifest.xml	(date 1671456600089)
@@ -33,7 +33,8 @@
 
         <service
             android:name="com.stardust.autojs.core.accessibility.AccessibilityService"
-            android:permission="android.permission.BIND_ACCESSIBILITY_SERVICE">
+            android:permission="android.permission.BIND_ACCESSIBILITY_SERVICE"
+            android:exported="true">
             <intent-filter>
                 <action android:name="android.accessibilityservice.AccessibilityService"/>
             </intent-filter>
Index: common/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.library'\napply plugin: 'kotlin-android'\n\nandroid {\n    compileSdkVersion versions.compile\n    buildToolsVersion versions.buildTool\n\n    defaultConfig {\n        minSdkVersion versions.mini\n        targetSdkVersion versions.target\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n    lintOptions {\n        abortOnError false\n    }\n    buildFeatures {\n        viewBinding true\n    }\n\n}\n\ndependencies {\n    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {\n        exclude group: 'com.android.support', module: 'support-annotations'\n    })\n    testImplementation 'junit:junit:4.13.2'\n    api \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\n    api 'androidx.annotation:annotation:1.2.0'\n    api 'com.github.hyb1996:settingscompat:1.1.5'\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/build.gradle b/common/build.gradle
--- a/common/build.gradle	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/common/build.gradle	(date 1671456600092)
@@ -3,13 +3,10 @@
 
 android {
     compileSdkVersion versions.compile
-    buildToolsVersion versions.buildTool
 
     defaultConfig {
         minSdkVersion versions.mini
         targetSdkVersion versions.target
-        versionCode 1
-        versionName "1.0"
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
 
@@ -31,11 +28,11 @@
 }
 
 dependencies {
-    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {
+    androidTestImplementation('androidx.test.espresso:espresso-core:3.5.0', {
         exclude group: 'com.android.support', module: 'support-annotations'
     })
     testImplementation 'junit:junit:4.13.2'
     api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
-    api 'androidx.annotation:annotation:1.2.0'
+    api 'androidx.annotation:annotation:1.5.0'
     api 'com.github.hyb1996:settingscompat:1.1.5'
 }
Index: app/src/main/res/layout/drawer_menu_group.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n             android:layout_width=\"match_parent\"\n             android:layout_height=\"wrap_content\"\n             android:background=\"?android:divider\"\n             android:paddingTop=\"@dimen/divider_drawer_menu_group\">\n\n    <TextView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              android:id=\"@+id/title\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"wrap_content\"\n              android:background=\"?android:windowBackground\"\n              android:padding=\"8dp\"\n              android:textColor=\"?drawer_group_text_color\"\n              android:textSize=\"12sp\">\n\n    </TextView>\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/drawer_menu_group.xml b/app/src/main/res/layout/drawer_menu_group.xml
--- a/app/src/main/res/layout/drawer_menu_group.xml	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/app/src/main/res/layout/drawer_menu_group.xml	(date 1671456600086)
@@ -5,8 +5,8 @@
              android:background="?android:divider"
              android:paddingTop="@dimen/divider_drawer_menu_group">
 
-    <TextView xmlns:android="http://schemas.android.com/apk/res/android"
-              android:id="@+id/title"
+    <TextView
+        android:id="@+id/title"
               android:layout_width="match_parent"
               android:layout_height="wrap_content"
               android:background="?android:windowBackground"
Index: project-versions.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"appVersionCode\": 461,\n  \"appVersionName\": \"4.1.1 Alpha2\",\n  \"target\": 28,\n  \"mini\": 17,\n  \"compile\": 28,\n  \"buildTool\": \"30.0.3\"\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project-versions.json b/project-versions.json
--- a/project-versions.json	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/project-versions.json	(date 1671456600092)
@@ -1,8 +1,7 @@
 {
   "appVersionCode": 461,
   "appVersionName": "4.1.1 Alpha2",
-  "target": 28,
+  "target": 31,
   "mini": 17,
-  "compile": 28,
-  "buildTool": "30.0.3"
+  "compile": 31
 }
\ No newline at end of file
Index: autojs/src/main/java/com/stardust/autojs/core/graphics/ScriptCanvasView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.stardust.autojs.core.graphics\n\nimport android.annotation.SuppressLint\nimport android.content.Context\nimport android.graphics.Canvas\nimport android.graphics.SurfaceTexture\nimport android.os.SystemClock\nimport android.util.Log\nimport android.view.TextureView\nimport android.view.View\nimport com.stardust.autojs.core.eventloop.EventEmitter\nimport com.stardust.autojs.runtime.ScriptRuntime\nimport com.stardust.autojs.runtime.exception.ScriptInterruptedException\nimport com.stardust.ext.ifNull\nimport java.util.concurrent.ExecutorService\nimport java.util.concurrent.Executors\n\n/**\n * Created by Stardust on 2018/3/16.\n */\n\n@SuppressLint(\"ViewConstructor\")\nclass ScriptCanvasView(context: Context, private val mScriptRuntime: ScriptRuntime) : TextureView(context), TextureView.SurfaceTextureListener {\n    @Volatile\n    private var mDrawing = true\n    private val mEventEmitter: EventEmitter = EventEmitter(mScriptRuntime.bridges)\n    private var mDrawingThreadPool: ExecutorService? = null\n    @Volatile\n    private var mTimePerDraw = (1000 / 30).toLong()\n\n    val maxListeners: Int\n        get() = mEventEmitter.maxListeners\n\n    init {\n        surfaceTextureListener = this\n    }\n\n    fun setMaxFps(maxFps: Int) {\n        mTimePerDraw = if (maxFps <= 0) {\n            0\n        } else {\n            (100 / maxFps).toLong()\n        }\n    }\n\n    @Synchronized\n    private fun performDraw() {\n        ::mDrawingThreadPool.ifNull {\n            Executors.newCachedThreadPool()\n        }.run {\n            execute {\n                var canvas: Canvas? = null\n                var time = SystemClock.uptimeMillis()\n                val scriptCanvas = ScriptCanvas()\n                try {\n                    while (mDrawing) {\n                        canvas = lockCanvas()\n                        scriptCanvas.setCanvas(canvas)\n                        emit(\"draw\", scriptCanvas, this@ScriptCanvasView)\n                        unlockCanvasAndPost(canvas)\n                        canvas = null\n                        val dt = mTimePerDraw - (SystemClock.uptimeMillis() - time)\n                        if (dt > 0) {\n                            sleep(dt)\n                        }\n                        time = SystemClock.uptimeMillis()\n                    }\n                } catch (e: Exception) {\n                    mScriptRuntime.exit(e)\n                    mDrawing = false\n                } finally {\n                    if (canvas != null) {\n                        unlockCanvasAndPost(canvas)\n                    }\n                }\n            }\n        }\n    }\n\n    private fun sleep(dt: Long) {\n        try {\n            Thread.sleep(dt)\n        } catch (e: InterruptedException) {\n            throw ScriptInterruptedException(e)\n        }\n\n    }\n\n    override fun onWindowVisibilityChanged(visibility: Int) {\n        Log.d(LOG_TAG, \"onWindowVisibilityChanged: \" + this + \": visibility=\" + visibility + \", mDrawingThreadPool=\" + mDrawingThreadPool)\n        val oldDrawing = mDrawing\n        mDrawing = visibility == View.VISIBLE\n        if (!oldDrawing && mDrawing) {\n            performDraw()\n        }\n        super.onWindowVisibilityChanged(visibility)\n    }\n\n    fun once(eventName: String, listener: Any): EventEmitter {\n        return mEventEmitter.once(eventName, listener)\n    }\n\n    fun on(eventName: String, listener: Any): EventEmitter {\n        return mEventEmitter.on(eventName, listener)\n    }\n\n    fun addListener(eventName: String, listener: Any): EventEmitter {\n        return mEventEmitter.addListener(eventName, listener)\n    }\n\n    fun emit(eventName: String, vararg args: Any): Boolean {\n        return mEventEmitter.emit(eventName, *args)\n    }\n\n    fun eventNames(): Array<String> {\n        return mEventEmitter.eventNames()\n    }\n\n    fun listenerCount(eventName: String): Int {\n        return mEventEmitter.listenerCount(eventName)\n    }\n\n    fun listeners(eventName: String): Array<Any> {\n        return mEventEmitter.listeners(eventName)\n    }\n\n    fun prependListener(eventName: String, listener: Any): EventEmitter {\n        return mEventEmitter.prependListener(eventName, listener)\n    }\n\n    fun prependOnceListener(eventName: String, listener: Any): EventEmitter {\n        return mEventEmitter.prependOnceListener(eventName, listener)\n    }\n\n    fun removeAllListeners(): EventEmitter {\n        return mEventEmitter.removeAllListeners()\n    }\n\n    fun removeAllListeners(eventName: String): EventEmitter {\n        return mEventEmitter.removeAllListeners(eventName)\n    }\n\n    fun removeListener(eventName: String, listener: Any): EventEmitter {\n        return mEventEmitter.removeListener(eventName, listener)\n    }\n\n    fun setMaxListeners(n: Int): EventEmitter {\n        return mEventEmitter.setMaxListeners(n)\n    }\n\n    override fun onSurfaceTextureAvailable(surface: SurfaceTexture, width: Int, height: Int) {\n        performDraw()\n        Log.d(LOG_TAG, \"onSurfaceTextureAvailable: ${this}, width = $width, height = $height\")\n    }\n\n    override fun onSurfaceTextureSizeChanged(surface: SurfaceTexture, width: Int, height: Int) {}\n\n    override fun onSurfaceTextureDestroyed(surface: SurfaceTexture): Boolean {\n        mDrawing = false\n        mDrawingThreadPool?.shutdown()\n        Log.d(LOG_TAG, \"onSurfaceTextureDestroyed: ${this}\")\n        return true\n    }\n\n    override fun onSurfaceTextureUpdated(surface: SurfaceTexture) {\n\n    }\n\n    companion object {\n\n        private const val LOG_TAG = \"ScriptCanvasView\"\n\n        fun defaultMaxListeners(): Int {\n            return EventEmitter.defaultMaxListeners()\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/autojs/src/main/java/com/stardust/autojs/core/graphics/ScriptCanvasView.kt b/autojs/src/main/java/com/stardust/autojs/core/graphics/ScriptCanvasView.kt
--- a/autojs/src/main/java/com/stardust/autojs/core/graphics/ScriptCanvasView.kt	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/autojs/src/main/java/com/stardust/autojs/core/graphics/ScriptCanvasView.kt	(date 1671456600090)
@@ -57,7 +57,7 @@
                         canvas = lockCanvas()
                         scriptCanvas.setCanvas(canvas)
                         emit("draw", scriptCanvas, this@ScriptCanvasView)
-                        unlockCanvasAndPost(canvas)
+                        canvas?.let { unlockCanvasAndPost(it) }
                         canvas = null
                         val dt = mTimePerDraw - (SystemClock.uptimeMillis() - time)
                         if (dt > 0) {
Index: automator/src/main/java/com/stardust/automator/GlobalActionAutomator.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.stardust.automator\n\nimport android.accessibilityservice.AccessibilityService\nimport android.accessibilityservice.GestureDescription\nimport android.graphics.Path\nimport android.os.Build\nimport android.os.Handler\nimport android.os.Looper\nimport androidx.annotation.RequiresApi\nimport android.view.ViewConfiguration\n\nimport com.stardust.concurrent.VolatileBox\nimport com.stardust.concurrent.VolatileDispose\nimport com.stardust.util.ScreenMetrics\n\n/**\n * Created by Stardust on 2017/5/16.\n */\n\nclass GlobalActionAutomator(private val mHandler: Handler?, private val serviceProvider: () -> AccessibilityService) {\n\n    private val service: AccessibilityService\n        get() = serviceProvider()\n\n    private var mScreenMetrics: ScreenMetrics? = null\n\n    fun setScreenMetrics(screenMetrics: ScreenMetrics?) {\n        mScreenMetrics = screenMetrics\n    }\n\n    fun back(): Boolean {\n        return performGlobalAction(AccessibilityService.GLOBAL_ACTION_BACK)\n    }\n\n    fun home(): Boolean {\n        return performGlobalAction(AccessibilityService.GLOBAL_ACTION_HOME)\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\n    fun powerDialog(): Boolean {\n        return performGlobalAction(AccessibilityService.GLOBAL_ACTION_POWER_DIALOG)\n    }\n\n    private fun performGlobalAction(globalAction: Int): Boolean {\n        return service.performGlobalAction(globalAction)\n    }\n\n    fun notifications(): Boolean {\n        return performGlobalAction(AccessibilityService.GLOBAL_ACTION_NOTIFICATIONS)\n    }\n\n    fun quickSettings(): Boolean {\n        return performGlobalAction(AccessibilityService.GLOBAL_ACTION_QUICK_SETTINGS)\n    }\n\n    fun recents(): Boolean {\n        return performGlobalAction(AccessibilityService.GLOBAL_ACTION_RECENTS)\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.N)\n    fun splitScreen(): Boolean {\n        return performGlobalAction(AccessibilityService.GLOBAL_ACTION_TOGGLE_SPLIT_SCREEN)\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.N)\n    fun gesture(start: Long, duration: Long, vararg points: IntArray): Boolean {\n        val path = pointsToPath(points)\n        return gestures(GestureDescription.StrokeDescription(path, start, duration))\n    }\n\n    private fun pointsToPath(points: Array<out IntArray>): Path {\n        val path = Path()\n        path.moveTo(scaleX(points[0][0]).toFloat(), scaleY(points[0][1]).toFloat())\n        for (i in 1 until points.size) {\n            val point = points[i]\n            path.lineTo(scaleX(point[0]).toFloat(), scaleY(point[1]).toFloat())\n        }\n        return path\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.N)\n    fun gestureAsync(start: Long, duration: Long, vararg points: IntArray) {\n        val path = pointsToPath(points)\n        gesturesAsync(GestureDescription.StrokeDescription(path, start, duration))\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.N)\n    fun gestures(vararg strokes: GestureDescription.StrokeDescription): Boolean {\n        val builder = GestureDescription.Builder()\n        for (stroke in strokes) {\n            builder.addStroke(stroke)\n        }\n        val handler = mHandler\n        return if (handler == null) {\n            gesturesWithoutHandler(builder.build())\n        } else {\n            gesturesWithHandler(handler, builder.build())\n        }\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.N)\n    private fun gesturesWithHandler(handler: Handler, description: GestureDescription): Boolean {\n        val result = VolatileDispose<Boolean>()\n        service.dispatchGesture(description, object : AccessibilityService.GestureResultCallback() {\n            override fun onCompleted(gestureDescription: GestureDescription) {\n                result.setAndNotify(true)\n            }\n\n            override fun onCancelled(gestureDescription: GestureDescription) {\n                result.setAndNotify(false)\n            }\n        }, handler)\n        return result.blockedGet()\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.N)\n    private fun gesturesWithoutHandler(description: GestureDescription): Boolean {\n        prepareLooperIfNeeded()\n        val result = VolatileBox(false)\n        val handler = Handler(Looper.myLooper())\n        service.dispatchGesture(description, object : AccessibilityService.GestureResultCallback() {\n            override fun onCompleted(gestureDescription: GestureDescription) {\n                result.set(true)\n                quitLoop()\n            }\n\n            override fun onCancelled(gestureDescription: GestureDescription) {\n                result.set(false)\n                quitLoop()\n            }\n        }, handler)\n        Looper.loop()\n        return result.get()\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.N)\n    fun gesturesAsync(vararg strokes: GestureDescription.StrokeDescription) {\n        val builder = GestureDescription.Builder()\n        for (stroke in strokes) {\n            builder.addStroke(stroke)\n        }\n        service.dispatchGesture(builder.build(), null, null)\n    }\n\n    private fun quitLoop() {\n        val looper = Looper.myLooper()\n        looper?.quit()\n    }\n\n    private fun prepareLooperIfNeeded() {\n        if (Looper.myLooper() == null) {\n            Looper.prepare()\n        }\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.N)\n    fun click(x: Int, y: Int): Boolean {\n        return press(x, y, ViewConfiguration.getTapTimeout() + 50)\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.N)\n    fun press(x: Int, y: Int, delay: Int): Boolean {\n        return gesture(0, delay.toLong(), intArrayOf(x, y))\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.N)\n    fun longClick(x: Int, y: Int): Boolean {\n        return gesture(0, (ViewConfiguration.getLongPressTimeout() + 200).toLong(), intArrayOf(x, y))\n    }\n\n    private fun scaleX(x: Int): Int {\n        return mScreenMetrics?.scaleX(x) ?: x\n    }\n\n    private fun scaleY(y: Int): Int {\n        return mScreenMetrics?.scaleX(y) ?: y\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.N)\n    fun swipe(x1: Int, y1: Int, x2: Int, y2: Int, delay: Long): Boolean {\n        return gesture(0, delay, intArrayOf(x1, y1), intArrayOf(x2, y2))\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/automator/src/main/java/com/stardust/automator/GlobalActionAutomator.kt b/automator/src/main/java/com/stardust/automator/GlobalActionAutomator.kt
--- a/automator/src/main/java/com/stardust/automator/GlobalActionAutomator.kt	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/automator/src/main/java/com/stardust/automator/GlobalActionAutomator.kt	(date 1671456600090)
@@ -117,7 +117,8 @@
     private fun gesturesWithoutHandler(description: GestureDescription): Boolean {
         prepareLooperIfNeeded()
         val result = VolatileBox(false)
-        val handler = Handler(Looper.myLooper())
+        val myLooper = Looper.myLooper() ?: return false
+        val handler = Handler(myLooper)
         service.dispatchGesture(description, object : AccessibilityService.GestureResultCallback() {
             override fun onCompleted(gestureDescription: GestureDescription) {
                 result.set(true)
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n          xmlns:tools=\"http://schemas.android.com/tools\"\n          package=\"org.autojs.autojs\">\n\n\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\"/>\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"com.android.launcher.permission.INSTALL_SHORTCUT\"/>\n    <uses-permission android:name=\"com.android.launcher.permission.UNINSTALL_SHORTCUT\"/>\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\n    <uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/>\n    <uses-permission android:name=\"android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS\"/>\n    <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\"/>\n    <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\"/>\n    <uses-permission android:name=\"android.permission.PACKAGE_USAGE_STATS\"\n        tools:ignore=\"ProtectedPermissions\" />\n\n\n    <!-- 非Auto.js运行必需，不会主动申请，某些脚本可以自行申请-->\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\"/>\n\n    <!-- Ad SDK Permissions -->\n    <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\n\n\n    <application\n        android:name=\".App\"\n        android:allowBackup=\"false\"\n        android:icon=\"@drawable/autojs_material\"\n        android:label=\"@string/app_name\"\n        android:largeHeap=\"true\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\"\n        android:usesCleartextTraffic=\"true\"\n        tools:replace=\"android:label, android:icon, android:allowBackup\"\n        tools:targetApi=\"m\">\n\n        <meta-data\n            android:name=\"android.max_aspect\"\n            android:value=\"2.1\"/>\n\n        <activity\n            android:name=\".ui.splash.SplashActivity\"\n            android:hardwareAccelerated=\"true\"\n            android:label=\"@string/app_name\"\n            android:theme=\"@style/AppTheme.Splash\">\n            <intent-filter>\n                <category android:name=\"android.intent.category.LAUNCHER\"/>\n\n                <action android:name=\"android.intent.action.MAIN\"/>\n            </intent-filter>\n        </activity>\n        <activity\n            android:name=\".ui.main.MainActivity\"\n            android:hardwareAccelerated=\"true\"\n            android:label=\"@string/app_name\"\n            android:launchMode=\"singleTask\"\n            android:theme=\"@style/AppTheme.FullScreen\">\n        </activity>\n        <activity\n            android:name=\".external.shortcut.ShortcutActivity\"\n            android:taskAffinity=\"org.autojs.autojs.external.shortcut.ShortcutActivity\"\n            android:theme=\"@android:style/Theme.NoDisplay\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\"/>\n\n                <category android:name=\"android.intent.category.DEFAULT\"/>\n            </intent-filter>\n        </activity>\n\n        <provider\n            android:name=\".external.fileprovider.AppFileProvider\"\n            android:authorities=\"org.autojs.autojs.fileprovider\"\n            android:exported=\"false\"\n            android:grantUriPermissions=\"true\">\n            <meta-data\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\n                android:resource=\"@xml/provider_paths\"/>\n        </provider>\n\n        <activity\n            android:name=\".ui.edit.EditActivity\"\n            android:configChanges=\"orientation|screenSize\"\n            android:launchMode=\"standard\"\n            android:multiprocess=\"true\"\n            android:taskAffinity=\"org.autojs.autojs.edit\"\n            android:theme=\"@style/EditorTheme\">\n        </activity>\n        <activity android:name=\".ui.settings.AboutActivity\"/>\n        <activity\n            android:name=\".ui.settings.SettingsActivity\"\n            android:theme=\"@style/AppTheme.Settings\"/>\n        <activity android:name=\".ui.error.ErrorReportActivity\"/>\n        <activity\n            android:name=\".external.tasker.TaskerScriptEditActivity\"\n            android:configChanges=\"orientation|screenSize\"\n            />\n        <activity\n            android:name=\".ui.user.LoginActivity\"\n            android:windowSoftInputMode=\"adjustResize\"/>\n        <activity\n            android:name=\".ui.user.RegisterActivity\"\n            android:windowSoftInputMode=\"adjustResize\"/>\n        <activity android:name=\".ui.user.WebActivity\"/>\n        <activity\n            android:name=\".ui.project.BuildActivity\"\n            android:configChanges=\"orientation|screenSize\"/>\n        <activity android:name=\".ui.project.ProjectConfigActivity\"/>\n        <activity android:name=\".ui.log.LogActivity\"/>\n        <activity android:name=\".ui.doc.DocumentationActivity\"/>\n        <activity android:name=\".ui.shortcut.ShortcutIconSelectActivity\"/>\n        <activity android:name=\".ui.timing.TimedTaskSettingActivity\"/>\n        <activity\n            android:name=\".ui.shortcut.ShortcutCreateActivity\"\n            android:theme=\"@style/AppTheme.Transparent\"/>\n        <activity android:name=\".external.widget.ScriptWidgetSettingsActivity\">\n            <intent-filter>\n                <action android:name=\"android.appwidget.action.APPWIDGET_CONFIGURE\"/>\n            </intent-filter>\n            <intent-filter>\n                <action android:name=\"android.intent.action.CREATE_SHORTCUT\"/>\n                <category android:name=\"android.intent.category.DEFAULT\"/>\n            </intent-filter>\n        </activity>\n\n        <activity\n            android:name=\".ui.error.IssueReporterActivity\"\n            android:theme=\"@style/IssueReporterTheme\"/>\n\n\n        <service android:name=\".external.foreground.ForegroundService\"/>\n        <service android:name=\".external.ScriptExecutionIntentService\"/>\n\n        <activity android:name=\".external.tasker.TaskPrefEditActivity\"/>\n\n        <service\n            android:name=\".external.tile.LayoutBoundsTile\"\n            android:icon=\"@drawable/ic_circular_menu_bounds\"\n            android:label=\"@string/text_inspect_layout_bounds\"\n            android:permission=\"android.permission.BIND_QUICK_SETTINGS_TILE\">\n            <meta-data\n                android:name=\"android.service.quicksettings.ACTIVE_TILE\"\n                android:value=\"false\"/>\n            <intent-filter>\n                <action android:name=\"android.service.quicksettings.action.QS_TILE\"/>\n            </intent-filter>\n        </service>\n\n        <service\n            android:name=\".external.tile.LayoutHierarchyTile\"\n            android:icon=\"@drawable/ic_circular_menu_hierarchy\"\n            android:label=\"@string/text_inspect_layout_hierarchy\"\n            android:permission=\"android.permission.BIND_QUICK_SETTINGS_TILE\">\n\n            <meta-data\n                android:name=\"android.service.quicksettings.ACTIVE_TILE\"\n                android:value=\"false\"/>\n            <intent-filter>\n                <action android:name=\"android.service.quicksettings.action.QS_TILE\"/>\n            </intent-filter>\n        </service>\n\n        <activity-alias\n            android:name=\".external.tasker.PluginActivity\"\n            android:exported=\"true\"\n            android:icon=\"@drawable/ic_android_eat_js\"\n            android:label=\"@string/app_name\"\n            android:targetActivity=\".external.tasker.TaskPrefEditActivity\"\n            tools:ignore=\"ExportedActivity\">\n            <intent-filter>\n                <action android:name=\"com.twofortyfouram.locale.intent.action.EDIT_SETTING\"/>\n            </intent-filter>\n        </activity-alias>\n\n        <receiver android:name=\"org.autojs.autojs.external.receiver.StaticBroadcastReceiver\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.BOOT_COMPLETED\"/>\n                <action android:name=\"android.intent.action.QUICKBOOT_POWERON\"/>\n                <action android:name=\"android.intent.action.TIME_SET\"/>\n                <action android:name=\"android.intent.action.TIMEZONE_CHANGED\"/>\n                <action android:name=\"android.intent.action.UID_REMOVED\"/>\n                <action android:name=\"android.intent.action.ACTION_POWER_CONNECTED\"/>\n                <action android:name=\"android.intent.action.ACTION_POWER_DISCONNECTED\"/>\n                <action android:name=\"android.intent.action.ACTION_SHUTDOWN\"/>\n                <action android:name=\"android.intent.action.DATE_CHANGED\"/>\n                <action android:name=\"android.intent.action.DREAMING_STARTED\"/>\n                <action android:name=\"android.intent.action.DREAMING_STOPPED\"/>\n                <action android:name=\"android.intent.action.HEADSET_PLUG\"/>\n                <action android:name=\"android.intent.action.INPUT_METHOD_CHANGED\"/>\n                <action android:name=\"android.intent.action.LOCALE_CHANGED\"/>\n                <action android:name=\"android.intent.action.MEDIA_BUTTON\"/>\n                <action android:name=\"android.intent.action.MEDIA_CHECKING\"/>\n                <action android:name=\"android.intent.action.MEDIA_MOUNTED\"/>\n                <action android:name=\"android.intent.action.PACKAGE_FIRST_LAUNCH\"/>\n                <action android:name=\"android.intent.action.PROVIDER_CHANGED\"/>\n                <action android:name=\"android.intent.action.WALLPAPER_CHANGED\"/>\n                <action android:name=\"android.intent.action.USER_UNLOCKED\"/>\n                <action android:name=\"android.intent.action.USER_PRESENT\"/>\n                <action android:name=\"android.net.conn.CONNECTIVITY_CHANGE\"/>\n                <!-- todo 使用WorkManager 取代-->\n            </intent-filter>\n            <intent-filter>\n                <action android:name=\"android.intent.action.PACKAGE_ADDED\"/>\n                <action android:name=\"android.intent.action.PACKAGE_CHANGED\"/>\n                <action android:name=\"android.intent.action.PACKAGE_DATA_CLEARED\"/>\n                <action android:name=\"android.intent.action.PACKAGE_REMOVED\"/>\n                <action android:name=\"android.intent.action.PACKAGE_RESTARTED\"/>\n\n                <data android:scheme=\"package\"/>\n            </intent-filter>\n        </receiver>\n\n        <receiver\n            android:name=\".external.tasker.FireSettingReceiver\"\n            android:exported=\"true\"\n            android:process=\":background\"\n            tools:ignore=\"ExportedReceiver\">\n\n            <!-- this Intent filter allows the plug-in to discovered by the host. -->\n            <intent-filter>\n                <action android:name=\"com.twofortyfouram.locale.intent.action.FIRE_SETTING\"/>\n            </intent-filter>\n        </receiver>\n\n        <activity\n            android:name=\".external.open.EditIntentActivity\"\n            android:icon=\"@drawable/autojs_material\"\n            android:label=\"@string/text_edit_script\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.VIEW\"/>\n                <action android:name=\"android.intent.action.EDIT\"/>\n\n                <category android:name=\"android.intent.category.DEFAULT\"/>\n                <category android:name=\"android.intent.category.BROWSABLE\"/>\n\n                <data android:scheme=\"file\"/>\n                <data android:scheme=\"content\"/>\n                <data android:mimeType=\"application/x-javascript\"/>\n                <data android:mimeType=\"text/plain\"/>\n            </intent-filter>\n        </activity>\n        <activity\n            android:name=\".external.open.RunIntentActivity\"\n            android:icon=\"@drawable/autojs_material\"\n            android:label=\"@string/text_run_script\"\n            android:taskAffinity=\"org.autojs.autojs.external.open.RunIntentActivity\"\n            android:theme=\"@android:style/Theme.NoDisplay\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.VIEW\"/>\n                <action android:name=\"android.intent.action.EDIT\"/>\n\n                <category android:name=\"android.intent.category.DEFAULT\"/>\n                <category android:name=\"android.intent.category.BROWSABLE\"/>\n\n                <data android:scheme=\"file\"/>\n                <data android:scheme=\"content\"/>\n                <data android:mimeType=\"application/x-javascript\"/>\n                <data android:mimeType=\"text/plain\"/>\n            </intent-filter>\n        </activity>\n        <activity\n            android:name=\".external.open.ImportIntentActivity\"\n            android:icon=\"@drawable/autojs_material\"\n            android:label=\"@string/text_import_script\"\n            android:theme=\"@style/AppTheme.Transparent\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.VIEW\"/>\n                <action android:name=\"android.intent.action.EDIT\"/>\n\n                <category android:name=\"android.intent.category.DEFAULT\"/>\n                <category android:name=\"android.intent.category.BROWSABLE\"/>\n\n                <data android:scheme=\"file\"/>\n                <data android:scheme=\"content\"/>\n                <data android:mimeType=\"application/x-javascript\"/>\n                <data android:mimeType=\"text/plain\"/>\n            </intent-filter>\n        </activity>\n\n        <service\n            android:name=\"com.stardust.notification.NotificationListenerService\"\n            android:label=\"@string/app_name\"\n            android:permission=\"android.permission.BIND_NOTIFICATION_LISTENER_SERVICE\">\n            <intent-filter>\n                <action android:name=\"android.service.notification.NotificationListenerService\"/>\n            </intent-filter>\n        </service>\n\n        <receiver android:name=\".external.widget.ScriptWidget\">\n            <intent-filter>\n                <action android:name=\"android.appwidget.action.APPWIDGET_UPDATE\"/>\n            </intent-filter>\n\n            <meta-data\n                android:name=\"android.appwidget.provider\"\n                android:resource=\"@xml/script_widget_config\"/>\n        </receiver>\n\n        <receiver android:name=\".timing.TaskReceiver\">\n            <intent-filter>\n                <action android:name=\"com.stardust.autojs.action.task\"/>\n            </intent-filter>\n        </receiver>\n\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 42bdd32bd9be525a6bd03d8f0dc9dcf548520fd6)
+++ b/app/src/main/AndroidManifest.xml	(date 1671456600085)
@@ -1,30 +1,31 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          xmlns:tools="http://schemas.android.com/tools"
-          package="org.autojs.autojs">
+    xmlns:tools="http://schemas.android.com/tools"
+    package="org.autojs.autojs">
 
 
-    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
-    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
-    <uses-permission android:name="com.android.launcher.permission.INSTALL_SHORTCUT"/>
-    <uses-permission android:name="com.android.launcher.permission.UNINSTALL_SHORTCUT"/>
-    <uses-permission android:name="android.permission.INTERNET"/>
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
-    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
-    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS"/>
-    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
-    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>
-    <uses-permission android:name="android.permission.PACKAGE_USAGE_STATS"
+    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
+    <uses-permission android:name="com.android.launcher.permission.INSTALL_SHORTCUT" />
+    <uses-permission android:name="com.android.launcher.permission.UNINSTALL_SHORTCUT" />
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
+    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" />
+    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
+    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
+    <uses-permission
+        android:name="android.permission.PACKAGE_USAGE_STATS"
         tools:ignore="ProtectedPermissions" />
 
 
     <!-- 非Auto.js运行必需，不会主动申请，某些脚本可以自行申请-->
-    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
-    <uses-permission android:name="android.permission.RECORD_AUDIO"/>
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
+    <uses-permission android:name="android.permission.RECORD_AUDIO" />
 
     <!-- Ad SDK Permissions -->
-    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
+    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
 
 
     <application
@@ -41,34 +42,33 @@
 
         <meta-data
             android:name="android.max_aspect"
-            android:value="2.1"/>
+            android:value="2.1" />
 
         <activity
             android:name=".ui.splash.SplashActivity"
+            android:exported="true"
             android:hardwareAccelerated="true"
-            android:label="@string/app_name"
             android:theme="@style/AppTheme.Splash">
             <intent-filter>
-                <category android:name="android.intent.category.LAUNCHER"/>
+                <category android:name="android.intent.category.LAUNCHER" />
 
-                <action android:name="android.intent.action.MAIN"/>
+                <action android:name="android.intent.action.MAIN" />
             </intent-filter>
         </activity>
         <activity
             android:name=".ui.main.MainActivity"
             android:hardwareAccelerated="true"
-            android:label="@string/app_name"
             android:launchMode="singleTask"
-            android:theme="@style/AppTheme.FullScreen">
-        </activity>
+            android:theme="@style/AppTheme.FullScreen"></activity>
         <activity
             android:name=".external.shortcut.ShortcutActivity"
+            android:exported="true"
             android:taskAffinity="org.autojs.autojs.external.shortcut.ShortcutActivity"
             android:theme="@android:style/Theme.NoDisplay">
             <intent-filter>
-                <action android:name="android.intent.action.MAIN"/>
+                <action android:name="android.intent.action.MAIN" />
 
-                <category android:name="android.intent.category.DEFAULT"/>
+                <category android:name="android.intent.category.DEFAULT" />
             </intent-filter>
         </activity>
 
@@ -79,7 +79,7 @@
             android:grantUriPermissions="true">
             <meta-data
                 android:name="android.support.FILE_PROVIDER_PATHS"
-                android:resource="@xml/provider_paths"/>
+                android:resource="@xml/provider_paths" />
         </provider>
 
         <activity
@@ -88,79 +88,81 @@
             android:launchMode="standard"
             android:multiprocess="true"
             android:taskAffinity="org.autojs.autojs.edit"
-            android:theme="@style/EditorTheme">
-        </activity>
-        <activity android:name=".ui.settings.AboutActivity"/>
+            android:theme="@style/EditorTheme"></activity>
+        <activity android:name=".ui.settings.AboutActivity" />
         <activity
             android:name=".ui.settings.SettingsActivity"
-            android:theme="@style/AppTheme.Settings"/>
-        <activity android:name=".ui.error.ErrorReportActivity"/>
+            android:theme="@style/AppTheme.Settings" />
+        <activity android:name=".ui.error.ErrorReportActivity" />
         <activity
             android:name=".external.tasker.TaskerScriptEditActivity"
-            android:configChanges="orientation|screenSize"
-            />
+            android:configChanges="orientation|screenSize" />
         <activity
             android:name=".ui.user.LoginActivity"
-            android:windowSoftInputMode="adjustResize"/>
+            android:windowSoftInputMode="adjustResize" />
         <activity
             android:name=".ui.user.RegisterActivity"
-            android:windowSoftInputMode="adjustResize"/>
-        <activity android:name=".ui.user.WebActivity"/>
+            android:windowSoftInputMode="adjustResize" />
+        <activity android:name=".ui.user.WebActivity" />
         <activity
             android:name=".ui.project.BuildActivity"
-            android:configChanges="orientation|screenSize"/>
-        <activity android:name=".ui.project.ProjectConfigActivity"/>
-        <activity android:name=".ui.log.LogActivity"/>
-        <activity android:name=".ui.doc.DocumentationActivity"/>
-        <activity android:name=".ui.shortcut.ShortcutIconSelectActivity"/>
-        <activity android:name=".ui.timing.TimedTaskSettingActivity"/>
+            android:configChanges="orientation|screenSize" />
+        <activity android:name=".ui.project.ProjectConfigActivity" />
+        <activity android:name=".ui.log.LogActivity" />
+        <activity android:name=".ui.doc.DocumentationActivity" />
+        <activity android:name=".ui.shortcut.ShortcutIconSelectActivity" />
+        <activity android:name=".ui.timing.TimedTaskSettingActivity" />
         <activity
             android:name=".ui.shortcut.ShortcutCreateActivity"
-            android:theme="@style/AppTheme.Transparent"/>
-        <activity android:name=".external.widget.ScriptWidgetSettingsActivity">
+            android:theme="@style/AppTheme.Transparent" />
+        <activity
+            android:name=".external.widget.ScriptWidgetSettingsActivity"
+            android:exported="true">
             <intent-filter>
-                <action android:name="android.appwidget.action.APPWIDGET_CONFIGURE"/>
+                <action android:name="android.appwidget.action.APPWIDGET_CONFIGURE" />
             </intent-filter>
             <intent-filter>
-                <action android:name="android.intent.action.CREATE_SHORTCUT"/>
-                <category android:name="android.intent.category.DEFAULT"/>
+                <action android:name="android.intent.action.CREATE_SHORTCUT" />
+                <category android:name="android.intent.category.DEFAULT" />
             </intent-filter>
         </activity>
 
         <activity
             android:name=".ui.error.IssueReporterActivity"
-            android:theme="@style/IssueReporterTheme"/>
+            android:theme="@style/IssueReporterTheme" />
 
 
-        <service android:name=".external.foreground.ForegroundService"/>
-        <service android:name=".external.ScriptExecutionIntentService"/>
+        <service android:name=".external.foreground.ForegroundService" />
+        <service android:name=".external.ScriptExecutionIntentService" />
 
-        <activity android:name=".external.tasker.TaskPrefEditActivity"/>
+        <activity android:name=".external.tasker.TaskPrefEditActivity" />
 
         <service
             android:name=".external.tile.LayoutBoundsTile"
+            android:exported="true"
             android:icon="@drawable/ic_circular_menu_bounds"
             android:label="@string/text_inspect_layout_bounds"
             android:permission="android.permission.BIND_QUICK_SETTINGS_TILE">
             <meta-data
                 android:name="android.service.quicksettings.ACTIVE_TILE"
-                android:value="false"/>
+                android:value="false" />
             <intent-filter>
-                <action android:name="android.service.quicksettings.action.QS_TILE"/>
+                <action android:name="android.service.quicksettings.action.QS_TILE" />
             </intent-filter>
         </service>
 
         <service
             android:name=".external.tile.LayoutHierarchyTile"
+            android:exported="true"
             android:icon="@drawable/ic_circular_menu_hierarchy"
             android:label="@string/text_inspect_layout_hierarchy"
             android:permission="android.permission.BIND_QUICK_SETTINGS_TILE">
 
             <meta-data
                 android:name="android.service.quicksettings.ACTIVE_TILE"
-                android:value="false"/>
+                android:value="false" />
             <intent-filter>
-                <action android:name="android.service.quicksettings.action.QS_TILE"/>
+                <action android:name="android.service.quicksettings.action.QS_TILE" />
             </intent-filter>
         </service>
 
@@ -172,45 +174,47 @@
             android:targetActivity=".external.tasker.TaskPrefEditActivity"
             tools:ignore="ExportedActivity">
             <intent-filter>
-                <action android:name="com.twofortyfouram.locale.intent.action.EDIT_SETTING"/>
+                <action android:name="com.twofortyfouram.locale.intent.action.EDIT_SETTING" />
             </intent-filter>
         </activity-alias>
 
-        <receiver android:name="org.autojs.autojs.external.receiver.StaticBroadcastReceiver">
+        <receiver
+            android:name="org.autojs.autojs.external.receiver.StaticBroadcastReceiver"
+            android:exported="true">
             <intent-filter>
-                <action android:name="android.intent.action.BOOT_COMPLETED"/>
-                <action android:name="android.intent.action.QUICKBOOT_POWERON"/>
-                <action android:name="android.intent.action.TIME_SET"/>
-                <action android:name="android.intent.action.TIMEZONE_CHANGED"/>
-                <action android:name="android.intent.action.UID_REMOVED"/>
-                <action android:name="android.intent.action.ACTION_POWER_CONNECTED"/>
-                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED"/>
-                <action android:name="android.intent.action.ACTION_SHUTDOWN"/>
-                <action android:name="android.intent.action.DATE_CHANGED"/>
-                <action android:name="android.intent.action.DREAMING_STARTED"/>
-                <action android:name="android.intent.action.DREAMING_STOPPED"/>
-                <action android:name="android.intent.action.HEADSET_PLUG"/>
-                <action android:name="android.intent.action.INPUT_METHOD_CHANGED"/>
-                <action android:name="android.intent.action.LOCALE_CHANGED"/>
-                <action android:name="android.intent.action.MEDIA_BUTTON"/>
-                <action android:name="android.intent.action.MEDIA_CHECKING"/>
-                <action android:name="android.intent.action.MEDIA_MOUNTED"/>
-                <action android:name="android.intent.action.PACKAGE_FIRST_LAUNCH"/>
-                <action android:name="android.intent.action.PROVIDER_CHANGED"/>
-                <action android:name="android.intent.action.WALLPAPER_CHANGED"/>
-                <action android:name="android.intent.action.USER_UNLOCKED"/>
-                <action android:name="android.intent.action.USER_PRESENT"/>
-                <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
+                <action android:name="android.intent.action.BOOT_COMPLETED" />
+                <action android:name="android.intent.action.QUICKBOOT_POWERON" />
+                <action android:name="android.intent.action.TIME_SET" />
+                <action android:name="android.intent.action.TIMEZONE_CHANGED" />
+                <action android:name="android.intent.action.UID_REMOVED" />
+                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
+                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
+                <action android:name="android.intent.action.ACTION_SHUTDOWN" />
+                <action android:name="android.intent.action.DATE_CHANGED" />
+                <action android:name="android.intent.action.DREAMING_STARTED" />
+                <action android:name="android.intent.action.DREAMING_STOPPED" />
+                <action android:name="android.intent.action.HEADSET_PLUG" />
+                <action android:name="android.intent.action.INPUT_METHOD_CHANGED" />
+                <action android:name="android.intent.action.LOCALE_CHANGED" />
+                <action android:name="android.intent.action.MEDIA_BUTTON" />
+                <action android:name="android.intent.action.MEDIA_CHECKING" />
+                <action android:name="android.intent.action.MEDIA_MOUNTED" />
+                <action android:name="android.intent.action.PACKAGE_FIRST_LAUNCH" />
+                <action android:name="android.intent.action.PROVIDER_CHANGED" />
+                <action android:name="android.intent.action.WALLPAPER_CHANGED" />
+                <action android:name="android.intent.action.USER_UNLOCKED" />
+                <action android:name="android.intent.action.USER_PRESENT" />
+                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                 <!-- todo 使用WorkManager 取代-->
             </intent-filter>
             <intent-filter>
-                <action android:name="android.intent.action.PACKAGE_ADDED"/>
-                <action android:name="android.intent.action.PACKAGE_CHANGED"/>
-                <action android:name="android.intent.action.PACKAGE_DATA_CLEARED"/>
-                <action android:name="android.intent.action.PACKAGE_REMOVED"/>
-                <action android:name="android.intent.action.PACKAGE_RESTARTED"/>
+                <action android:name="android.intent.action.PACKAGE_ADDED" />
+                <action android:name="android.intent.action.PACKAGE_CHANGED" />
+                <action android:name="android.intent.action.PACKAGE_DATA_CLEARED" />
+                <action android:name="android.intent.action.PACKAGE_REMOVED" />
+                <action android:name="android.intent.action.PACKAGE_RESTARTED" />
 
-                <data android:scheme="package"/>
+                <data android:scheme="package" />
             </intent-filter>
         </receiver>
 
@@ -222,87 +226,95 @@
 
             <!-- this Intent filter allows the plug-in to discovered by the host. -->
             <intent-filter>
-                <action android:name="com.twofortyfouram.locale.intent.action.FIRE_SETTING"/>
+                <action android:name="com.twofortyfouram.locale.intent.action.FIRE_SETTING" />
             </intent-filter>
         </receiver>
 
         <activity
             android:name=".external.open.EditIntentActivity"
+            android:exported="true"
             android:icon="@drawable/autojs_material"
             android:label="@string/text_edit_script">
             <intent-filter>
-                <action android:name="android.intent.action.VIEW"/>
-                <action android:name="android.intent.action.EDIT"/>
+                <action android:name="android.intent.action.VIEW" />
+                <action android:name="android.intent.action.EDIT" />
 
-                <category android:name="android.intent.category.DEFAULT"/>
-                <category android:name="android.intent.category.BROWSABLE"/>
+                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.BROWSABLE" />
 
-                <data android:scheme="file"/>
-                <data android:scheme="content"/>
-                <data android:mimeType="application/x-javascript"/>
-                <data android:mimeType="text/plain"/>
+                <data android:scheme="file" />
+                <data android:scheme="content" />
+                <data android:mimeType="application/x-javascript" />
+                <data android:mimeType="text/plain" />
             </intent-filter>
         </activity>
         <activity
             android:name=".external.open.RunIntentActivity"
+            android:exported="true"
             android:icon="@drawable/autojs_material"
             android:label="@string/text_run_script"
             android:taskAffinity="org.autojs.autojs.external.open.RunIntentActivity"
             android:theme="@android:style/Theme.NoDisplay">
             <intent-filter>
-                <action android:name="android.intent.action.VIEW"/>
-                <action android:name="android.intent.action.EDIT"/>
+                <action android:name="android.intent.action.VIEW" />
+                <action android:name="android.intent.action.EDIT" />
 
-                <category android:name="android.intent.category.DEFAULT"/>
-                <category android:name="android.intent.category.BROWSABLE"/>
+                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.BROWSABLE" />
 
-                <data android:scheme="file"/>
-                <data android:scheme="content"/>
-                <data android:mimeType="application/x-javascript"/>
-                <data android:mimeType="text/plain"/>
+                <data android:scheme="file" />
+                <data android:scheme="content" />
+                <data android:mimeType="application/x-javascript" />
+                <data android:mimeType="text/plain" />
             </intent-filter>
         </activity>
         <activity
             android:name=".external.open.ImportIntentActivity"
+            android:exported="true"
             android:icon="@drawable/autojs_material"
             android:label="@string/text_import_script"
             android:theme="@style/AppTheme.Transparent">
             <intent-filter>
-                <action android:name="android.intent.action.VIEW"/>
-                <action android:name="android.intent.action.EDIT"/>
+                <action android:name="android.intent.action.VIEW" />
+                <action android:name="android.intent.action.EDIT" />
 
-                <category android:name="android.intent.category.DEFAULT"/>
-                <category android:name="android.intent.category.BROWSABLE"/>
+                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.BROWSABLE" />
 
-                <data android:scheme="file"/>
-                <data android:scheme="content"/>
-                <data android:mimeType="application/x-javascript"/>
-                <data android:mimeType="text/plain"/>
+                <data android:scheme="file" />
+                <data android:scheme="content" />
+                <data android:mimeType="application/x-javascript" />
+                <data android:mimeType="text/plain" />
             </intent-filter>
         </activity>
 
         <service
             android:name="com.stardust.notification.NotificationListenerService"
+            android:exported="true"
             android:label="@string/app_name"
             android:permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE">
             <intent-filter>
-                <action android:name="android.service.notification.NotificationListenerService"/>
+                <action android:name="android.service.notification.NotificationListenerService" />
             </intent-filter>
         </service>
 
-        <receiver android:name=".external.widget.ScriptWidget">
+        <receiver
+            android:name=".external.widget.ScriptWidget"
+            android:exported="true">
             <intent-filter>
-                <action android:name="android.appwidget.action.APPWIDGET_UPDATE"/>
+                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
             </intent-filter>
 
             <meta-data
                 android:name="android.appwidget.provider"
-                android:resource="@xml/script_widget_config"/>
+                android:resource="@xml/script_widget_config" />
         </receiver>
 
-        <receiver android:name=".timing.TaskReceiver">
+        <receiver
+            android:name=".timing.TaskReceiver"
+            android:exported="true">
             <intent-filter>
-                <action android:name="com.stardust.autojs.action.task"/>
+                <action android:name="com.stardust.autojs.action.task" />
             </intent-filter>
         </receiver>
 
